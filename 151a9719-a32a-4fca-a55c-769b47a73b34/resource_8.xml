<?xml version="1.0" encoding="UTF-8"?><topic id="0ede2c7f-f0c8-4212-9c31-cf3caefa613c"><title id="47f2fdc5-eca0-4e9b-bfc8-f2fbd76403d8">Professionelle XML Verarbeitung</title><body id="4c47d822-0170-4ff7-b065-932773eb0e10"><p id="25b21e23-d4ce-4721-a7d1-2c6b83245a70">Vom Single-Source Publishing bis zur Generierung von Java Code aus Klassendiagrammen.</p><section id="b3ef9995-0478-4867-b02a-e2a3b0d9cf2cd6e6"><title id="012db970-b72c-425a-a3ad-3e817e002282d6e7">Single Source Publishing</title><p id="e88e78e7-d931-45f4-bb7f-0e055e7db65cd6e9">Gängige Formate in der Technischen Dokumentation sind elektronische Ausgabe-Formate wie: CHM, EclipseHelp, JavaHelp, ePub, ..., Print-Ausgabe Formate, wie PDF oder Adobe Framemaker, oder XML Standard Austauschformate, wie DITA, S1000D, PI-MOD[[xe1:Standards;xe2:PI-MOD]] oder TEI[[xe1:Standards;xe2:TEI]].
Vorteile:</p><ul id="553bfff3-3f37-487a-bcf4-41a7af675214d6e11"><li id="d41fdd94-47cd-4579-bb54-832ec1bd4bafd6e12"><p id="ada9653b-2335-47be-bcd7-a5042e1aedfed6e13">Bei einer Änderung in der XML Quelle werden auch automatisch alle anschließenden Formate aktualisiert.</p></li><li id="33e6382f-3e2e-433b-9f96-7b0d139fe8ecd6e15"><p id="9c7312ef-0291-4c2d-8fd1-5e3454490334d6e16">Strikte Trennung von Content/Semantik und Layout/Design.</p></li><li id="fb06e39f-6f64-4ae1-b60b-98cd66ee1260d6e18"><p id="134e480d-ab4c-4554-95d7-55cceb619677d6e19">Auf der XML Quelle sind XML Features möglich, wie:
	
		<b id="d16e0bf2-e0ab-48c6-b327-0e3958fd85add6e21">Modularisierung</b>: Erlaubt die fein-granulare <b id="34d39be2-57c0-4a69-9b38-d45bb56faa9cd6e24">Wiederverwendung</b>[[xe1:Konzepte;xe2:Wiederverwendung]] von Content-Bausteinen, sowie das Verlinken, Filtern, Suchen und Exportieren derselben.
		<b id="6d6136c2-b88c-4658-b8f9-ba86163e8e82d6e27">Generalisierung</b>[[xe1:Konzepte;xe2:Generalisierung und Spezialisierung]] ist ein DITA Konzept, welches die Wiederverendung von angepassten Topics in anderen DITA Systemen ermöglicht.
		<b id="ef6895b2-ffb2-4cdd-a5d6-0e8e35e92665d6e30">Gültigkeiten</b>[[xe1:Konzepte;xe2:Gültigkeitem]] erlauben die bedingte Anwendung von Content-Bestandteilen auf Satz und Wort-Ebene.
		<b id="65e16dce-7bfc-4aad-9078-3e91652e7b56d6e33">Versionierung</b>[[xe1:Konzepte;xe2:Versionierung]] und <b id="980b4c6c-38db-488a-b72b-a759e69d2163d6e37">Diffing</b>[[xe1:Konzepte;xe2:Diffing]] - Vergleich von Änderungen zwischen Versionen. <b id="38df9a66-a53f-4a24-bf72-4c84cc2db220d6e40">Intelligente Querverweise</b>[[xe1:Konzepte;xe2:Intelligente Querverweise]]: Ein Link zwischen einzelnen XML Topics  bleibt versionstreu.
		<b id="1b5af6e2-84b2-4488-bece-5367e24305f5d6e43">Automatischer Satz</b>, inkl. Zusamenhalte- und Trennregeln für Seiten, Absätze und Blöcke (Listen, Tabellen, etc).
	
	</p></li><li id="5efb1726-da14-40f9-8780-2f3302897666d6e21"><p id="23dc2a71-64a3-4305-b3d7-81094ca5bcd8d6e22">Veraltete Formate können ausgetauscht werden, ohne dass der Content geändert werden muss oder verlorengeht.</p></li><li id="25171ed0-23f9-4687-b1aa-f1f205f44f9ed6e24"><p id="47b354c2-4b48-48c9-ac10-ed3f041feb2fd6e25">Die XML Quelle kann ohne Aufbereitung in anderen Systemen wiederverwendet werden.</p></li><li id="23038ff3-7ac5-410b-a730-cb33a3c50c9ad6e27"><p id="252ae481-7a29-4117-9b72-94ae88638e75d6e28">Es gibt weit verbreitete <b id="e0655849-2b8e-413f-bc04-f17a53b3965dd6e55">Standards</b> zur Struktur der XML Quelle.</p></li><li id="a1cc694b-da1e-4941-9777-01442a21755fd6e30"><p id="578ead23-ba8a-4186-bf96-e9c9dae8ec9fd6e31">Nur das XML wird in der Datenhaltung persistiert.</p></li><li id="c6a284d6-23aa-404e-8b5d-4f76ee4dab97d6e33"><p id="c6122f80-b8a0-4cca-9939-4122325dfef2d6e34">Es gibt spezialisierte <xref href="3337f433-44bf-430d-a809-73fd1de5ba6c" id="1b7d4b0c-4559-48b0-9e66-21a243a47897" type="topic">XML Datenbanken</xref>, die besonders gut auf Baumstrukturen arbeiten. (Dokumente sind per se baum-strukturiert und sind eigentlich für eine relationale Datenbank ungeignet)</p></li></ul><p id="df845a80-c690-4551-af36-90a401ff12aed6e36">Die Redaktionssysteme der Technischen Dokumentation der führenden Hersteller in Deutschland haben XML unter der Haube und setzen auf die <b id="0e94bef5-f15d-4209-b53c-26b68a6604c8d6e69">Single-Source Strategie</b>.</p></section><section id="084a7657-95f1-4ade-905e-cada919a0918d6e72"><title id="c2ea4ffe-bfc9-4c96-b5d9-d793083fc510d6e39">Code Generierung</title><p id="62ada423-a662-4d08-ba65-63ccadd079ced6e41">Nachdem man bei XSLT im Format der Ausgabe frei ist, kann auch direkt Plain-Text mit  XSLT Regeln generiert werden. Daher liegt es nahe sich jegliche Form von Quelltext aus einer XML Repräsentation erzeugen zu lassen.[[xe1:Anwendungsgebiete;xe2:Code Generierung]]</p><p id="52746a75-07e2-4452-8f21-1fb22d4e1332d6e43">Beispielsweise speichern gängige CASE Tools (Computer Aided Software Engineering) UML Diagramme im XML Format ab, so z.B. [[link]]ArgoUML[[fn:http://argouml.tigris.org*ArgoUML ist ein freier UML Editor]].</p><p id="a655bc68-8f84-470f-ad3f-a5bb41b19aa6d6e48">Diese Klassendiagramme lassen sich mittels XSLT direkt in Java-Code transformieren, wie z.B. in einem kleinen Open Source Projekt (aus vergangenen Tagen) : [[link]]Butterfly Code Generator[[fn:http://butterflycode.sourceforge.net*Damit kann man sich Code aus UMl Klassendiagrammen generieren lassen, natürlich XSLT basiert]]</p><p id="ba1967f4-d697-4466-8455-dd17d935c68ed6e53">Es gibt auch einen schönen Artikel dazu im [[link]]Java World Journal[[fn:https://www.javaworld.com/article/2073998/java-web-development/generate-javabean-classes-dynamically-with-xslt.html*Weiterführende Lektüre zum Thema Code-Generierung mit XSLT]].</p></section><section id="ce09156d-5ebb-4829-b9dc-21a3bfdf8107d6e83"><title id="bd0e17e7-dce2-45a0-b5eb-90297e678e88d6e56">Migrationen und Konvertierungen</title><p id="b7221c07-bea2-4a1e-a1cd-09318580ea8dd6e58">Für jede erdenkliche Art der Migration[[xe1:Anwendungsgebiete;xe2:Migration]] eines XML Datenbestands oder eines Datenbank-Dumps / -Exports im XML Format, zwischen Produktversionen oder zwischen Dienstleister- und Dienstnutzer-Systemen, bietet sich XSLT zur Transformation an.</p><p id="755dccf0-48c4-4b8f-a778-4e4eb27089a9d6e60">Dabei ist zu beachten, dass XSLT besonders schnell und gut auf verschachtelten Strukturen arbeitet. Entartet ein Baum zur Liste und/oder sind nur geringe Strukturanpassungen notwendig, wird man sich mit einem schnellen SAX Parser leichter tun. </p><p id="e438ab3c-2aa9-4400-a40a-9181c1911835d6e90"> Mittels der XSLT3.0 Streaming Option können auch sehr große XML Quellen (Big Data) verarbeitet werden. Saxon bietet bspw. diese [[link]]Streaming Option[[fn:http://www.saxonica.com/html/documentation/sourcedocs/streaming/*Streaming ist eine Technik zur Verarbeitung großer XML Daten - Stichwort Big Data - mit XSLT3.0]].</p></section></body></topic>