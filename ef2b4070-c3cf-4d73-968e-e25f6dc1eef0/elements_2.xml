<?xml version="1.0" encoding="UTF-8"?><elements><element id="ba9dfb96-d3dd-49c8-9008-8476c0e59728" type="para">Bi-Temporale Dokumente</element><element id="fd257336-1ea5-47eb-8795-ac4f22576a8e" type="para">Wenn wir zwischen der Zeit in der das Dokument, bspw. ein Vetrag in der DB angelegt wird, und der Zeit in der ein Vetrag zwischen zwei Vetragspartnern abgeschlossen wird unterscheiden, dann betrachten wir zwei Zeitachsen. </element><element id="46d3aa4f-711a-488f-bf81-077849243208d6e8" type="para">die gültige Zeit (Valid Time)</element><element id="4163702b-b6e9-40ec-b389-2a8af0afae33d6e11" type="para">die Systemzeit (System Time)</element><element id="fab57861-93d5-47d3-8046-7b0d2c180b5cd6e13" type="para">Für die Vetragspartner ist nur die gültige Zeit relevant. Das Zeitfenster zwischen gültiger Zeit und Systemzeit ist jedoch in manchen Fällen ausschlaggebend.</element><element id="50e4e500-a66d-4744-9730-1e4da489e1f8d6e15" type="para"> Bsp: Kürzlich wurde meine Geldbörse mit meinem Perso geklaut. Beim Austellen eines vorläufigen Ausweises wurde ich schriftlich darauf hingewiesen, dass nun mein Perso bei Interpol zur Fahndung ausgeschrieben ist. </element><element id="93133dc8-bb02-4da9-b779-64955be86d07d6e17" type="para"> Kurze Zeit später fand ein netter Herr die Geldbörse (ohne Geld aber mit allen Papieren) in seinem Garten. Bei einer anschliessenden Busfahrt mit einem Fernbus, wurde ich bei einer Zollkontrolle festgehalten, da das System der Polizei noch nicht aktualisiert war. </element><element id="1fee1c3d-dd8b-4649-85ce-5b3d23ecec18d6e19" type="para">Ich nehme an, dass nach meiner Unschuldsbekundung der Vorgang auch auf Seiten des Polizeicomputers aktualisiert wurde. Nun könnte man zwei Fragen stellen:</element><element id="5664c21f-b0b1-4c4f-a8f1-251415142a7cd6e23" type="para">Ist das Festhalten seitens der Zollbeamten rechtens?</element><element id="94fb012d-2fbb-4d68-b285-c05ccb98f507d6e26" type="para">Habe ich mich durch ein verspätetes Anzeigen des Funds schuldig gemacht?</element><element id="f93b1ee9-1f0e-4d60-a375-7e32300f4d41d6e29" type="para">Beachte, dass man diese Fragen auch noch nach 10 Jahren stellen könnte und das - bei meinem Pech in diesen Angelegenheiten - so ein Vorfall auch noch öfters passieren könnte...</element><element id="19976305-dbf8-447b-bf4e-b0e849b7e741d6e31" type="para">Um diese Fragen zu beantworten, müsste unsere Datenbank in der Lage sein, eine bitemporale Query auszuführen. Zunächst registerieren wir den Vorgang des Persoverlustes in unserer Marklogic Datenbank:</element><element id="bc4e68d9-d093-46bc-bf26-de40abdc0486d6e34" type="para">Da wir hier auf einer XML Datenbank arbeiten, sprechen wir von einem Dokument, wenn wir einen Datensatz meinen.</element><element id="e5e49287-034d-456c-bc49-d3e82236edb7d6e38" type="para">Der Datensatz bzw. das Dokument wird nicht aktualisiert, sondern stattdessen das Dokument mit den aktualisierten Daten in einer neuen Version angelegt.</element><element id="e5af2997-aab7-463b-824b-f4de4f4d15f2d6e40" type="para">Auf diese Weise bleibt die Änderungshistorie erhalten.</element><element id="16ac8094-b2fd-4b7b-b959-71f8ed60549dd7e42" type="code">xquery version \"1.0-ml\"; import module namespace temporal = \"http:\/\/marklogic.com\/xdmp\/temporal\" at \"\/MarkLogic\/temporal.xqy\"; let $root := &lt;vorgang&gt; &lt;perso-id&gt;XYZ&lt;\/perso-id&gt; &lt;name&gt;Alex Düsel&lt;\/name&gt; &lt;status&gt;gestohlen&lt;\/status&gt; &lt;\/vorgang&gt; let $options := &lt;options xmlns=\"xdmp:document-insert\"&gt; &lt;metadata&gt; &lt;map:map xmlns:map=\"http:\/\/marklogic.com\/xdmp\/map\"&gt; &lt;map:entry key=\"validStart\"&gt; &lt;map:value&gt;2019-02-01T08:23:11&lt;\/map:value&gt; &lt;\/map:entry&gt; &lt;map:entry key=\"validEnd\"&gt; &lt;map:value&gt;9999-12-31T11:59:59Z&lt;\/map:value&gt; &lt;\/map:entry&gt; &lt;\/map:map&gt; &lt;\/metadata&gt; return temporal:document-insert(\"\/perso-verluste\", \"duesel_alex_270774.xml\", $root, $options)</element><element id="34c9ed87-b6df-4fde-bda2-1b868aac4838d6e39" type="para">Unser Enddatum liegt in ferner Zukunft sicherzustellen, dass der Vorgang auf unbestimmte Zeit im System bleibt.</element><element id="500405f5-6396-4071-8349-1d9f6d39049dd6e41" type="para">Drei Tage später hatte ich meinen Ausweis wieder und der Vorgang wurde vier Tage später, mit dem Status \"gefunden\" im Polizeicomputer aktualisiert:</element><element id="535f11c9-35e2-4ed3-820b-b10275b829a6d7e49" type="code">xquery version \"1.0-ml\"; import module namespace temporal = \"http:\/\/marklogic.com\/xdmp\/temporal\" at \"\/MarkLogic\/temporal.xqy\"; let $root := &lt;vorgang&gt; &lt;perso-id&gt;XYZ&lt;\/perso-id&gt; &lt;name&gt;Alex Düsel&lt;\/name&gt; &lt;status&gt; gefunden &lt;\/status&gt; &lt;\/vorgang&gt; let $options := &lt;options xmlns=\"xdmp:document-insert\"&gt; &lt;metadata&gt; &lt;map:map xmlns:map=\"http:\/\/marklogic.com\/xdmp\/map\"&gt; &lt;map:entry key=\"validStart\"&gt; &lt;map:value&gt;2019-02-06T08:00:00&lt;map:value&gt; &lt;\/map:entry&gt; &lt;map:entry key=\"validEnd\"&gt; &lt;map:value&gt;9999-12-31T11:59:59Z&lt;\/map:value&gt; &lt;\/map:entry&gt; &lt;\/map:map&gt; &lt;\/metadata&gt; return temporal:document-insert(\"\/perso-verluste\", \"duesel_alex_270774.xml\", $root, $options)</element><element id="7dbc517d-b5b4-4c1b-b691-7d20f6c61c12d6e48" type="para">Nach der Aktualisierung enthält unsere Datenbank logisch gesehen drei Dokumente zu diesem Vorgang, die über eine Query gesucht werden können:</element><element id="d112decc-3611-40d4-b9ca-0a55258e223ed6e52" type="para">Das Originaldokument, es ist vom 1.2.2019 bis zum 5.2.2019 im System aktiv</element><element id="3a23cb95-2f16-4254-8245-c0bf90780a1bd6e55" type="para">Die Aktualisierung, sie ist ab dem 6.2.2019 aktiv</element><element id="9d2d4a7b-bdf2-42e8-a024-cb053a126324d6e58" type="para">Ein \"Split\"-Dokument , das aus der verspäteten Aktualisierung resultiert. Es ist ab dem 6.2.2019 im System aktiv, und zeigt den Zeitraum über einen Tag, vom 4.2.2019 bis 5.2.2019 - in dem ich ohne Perso registriert war, ihn aber tatsächlich schon wieder hatte.</element><element id="6dc19f9e-db12-4a7c-83cd-42bb430d2c07d6e60" type="para">Im Gegensatz zu einer herkömmlichen Datenhaltung, bei der ein Datensatz aktualisiert wird - ggf. noch eine neue Version angelegt wird - wird beim Dokument-basierten Ansatz mit bi-temporaler Datenhaltung jede Transaktion separat abgespeichert.</element><element id="e1401c45-9a9f-41ec-a7a5-59721215ab2ed6e62" type="para">Das ist vergleichbar mit einer Simulation des tatsächlichen Papierverkehrs bei buchhalterischen Tätigkeiten.</element><element id="b2db7425-9d5b-4429-9ca6-51a67a0a34d0d6e62" type="para">Die Abfrage so einer Datenbank ist dadurch nicht einfacher. Drei Queries, die jeweils eines dieser drei Dokumente zurückgeben, könnten bspw. so aussehen:</element><element id="acdf48e7-7718-42be-89b9-e04b3860a7a0d6e72" type="para"> </element><element id="2afbc9fb-c2fc-4bf2-958e-45a2d7424bd3d7e74" type="code">xquery version \"1.0-ml\"; cts:search(fn:doc(), cts:period-range-query( \"system\", \"ISO_CONTAINS\", cts:period(xs:dateTime(\"2019-02-02T00:00:00\"), xs:dateTime(\"2019-02-03T23:59:59\")) )</element><element id="6d72130d-963a-4908-ac29-70e5fd445d16d6e76" type="para">Hier wird geprüft, ob ein Dokument im System aktiv war, dass den Zeitraum vom 2.3. bis zum 3.3. umfasste ( ). Diese Query ist erfolgreich und gibt das Original-Dokument des Vorgangs zurück: In diesem Zeitraum war ich also mit gestohlenem Perso registriert.</element><element id="326f277b-22dc-4247-ac43-a1245718a13ed6e79" type="para"> </element><element id="64cdb774-4253-4f18-b62a-17d1fa8334bad7e81" type="code">xquery version \"1.0-ml\"; cts:search(fn:doc(), cts:period-range-query( \"valid\", \"ALN_FINISHES\", cts:period(xs:dateTime(\"2019-02-06T08:00:00\"), xs:dateTime(\"2019-02-06T08:00:00\")) ))</element><element id="3922ce91-3c33-48c6-8400-666039dec485d6e83" type="para">Bei dieser Query wird geprüft, ob es ein Dokument gibt, dass zu einem bestimmten Datum auf inaktiv gesetzt wurde ( ) - Das Split-Dokument wird automatisch auf inaktiv gesetzt, wenn die neue Version angelegt wird. Unser Suchdatum wäre also folgendes .</element><element id="6d071bab-832d-44ca-862f-cdacf2b3c395d6e85" type="para"> </element><element id="89ef4a63-6eb2-418f-aa80-df95641a2804d7e87" type="code">xquery version \"1.0-ml\"; cts:search(fn:doc(), cts:period-range-query( \"system\", \"ALN_AFTER\", cts:period(xs:dateTime(\"2019-02-05T11:00:00\"), xs:dateTime(\"2019-02-05T11:20:00\")) ))</element><element id="a28b9e0d-50c7-4d25-93f6-092f892cfaf0d6e89" type="para">Hier wird geprüft ob es Dokumente gibt, die nach einer bestimmten Zeitspanne im System aktiv waren. Man beachte hier, dass eine Periode angegeben ist, obwohl nur ein Datum notwendig wäre. Der Vergleichsoperator hierzu heisst .</element><element id="9a383d4c-8c64-4a96-a7e9-b44018451dc2d6e91" type="para"> </element><element id="4aa59920-b2f5-4bcf-908c-a154b7dde88ed7e93" type="code">xquery version \"1.0-ml\"; cts:search(fn:doc(), cts:period-compare-query( \"system\", \"ISO_CONTAINS\", \"valid\" ))</element><element id="fd41504a-bbd5-4a2c-b30b-e900a2fc5bbed6e95" type="para">Die aktuelle Version kann in Erfahrung gebracht werden, indem geprüft wird, welche gültigen Dokumente innerhalb der Systemzeitspanne liegen. Das kann nur die aktuelle Version sein. Frühere gültige Versionen und Split-Dokumente wären vor der Systemzeit-Spanne.</element><element id="4f2dcc2f-b93d-4e30-b5e0-b19426c49d74d6e97" type="para">Die letzte Version eines Dokuments kann aber auch einfach über ein flag in Erfahrung gebracht werden:</element><element id="5562a306-48d4-4745-b24a-0e097a0072e4d7e99" type="code">xquery version \"1.0-ml\"; cts:search(fn:doc(), cts:and-query(( cts:collection-query((\"koolorder.xml\")), cts:collection-query((\"latest\")))))</element><element id="8a06ef70-7819-46ee-bfb8-8b3d7199f66ad6e102" type="para"> </element><element id="3eebe4b0-500c-4caf-a6ef-ec0fb3e6f692d6e110" type="para"> Temporal Developer's Guide auf den MarkLogic Doku-Seiten </element><element id="5277160a-a715-4227-b2ae-96d9e230a775d6e113" type="para"> A Deep Dive into Bitemporal </element><element id="45286919-c6bc-41e6-841b-dcd6b85d4b05d6e113" type="para"> Temporale Datenhaltung in der Praxis mit Java </element></elements>