<?xml version="1.0" encoding="UTF-8"?><elements><element id="5120c997-0d91-430d-b495-2ae71480b83cd7e25">xquery version\"1.0-ml\"; import module namespace admin =\"http:\/\/marklogic.com\/xdmp\/admin\"at\"\/MarkLogic\/admin.xqy\"; import module namespace temporal =\"http:\/\/marklogic.com\/xdmp\/temporal\"at\"\/MarkLogic\/temporal.xqy\"; declare namespace local = 'local:'; declare variable $db :=\"alex-test\"; declare function local:create-temporal-fields() { let $config := admin:get-configuration(), $dbid := xdmp:database($db) return try { admin:save-configuration( admin:database-add-field($config, $dbid, admin:database-metadata-field(\"validStart\"))), admin:save-configuration( admin:database-add-field($config, $dbid, admin:database-metadata-field(\"validEnd\"))), admin:save-configuration( admin:database-add-field($config, $dbid, admin:database-metadata-field(\"systemStart\"))), admin:save-configuration( admin:database-add-field($config, $dbid, admin:database-metadata-field(\"systemEnd\"))) } catch ($err) {} }; declare function local:create-range-index-fields() { let $config := admin:get-configuration(), $dbid := xdmp:database($db) return try { admin:save-configuration( admin:database-add-range-field-index($config, $dbid, admin:database-range-field-index(\"dateTime\",\"validStart\",\"\", fn:true()))), admin:save-configuration( admin:database-add-range-field-index($config, $dbid, admin:database-range-field-index(\"dateTime\",\"validEnd\",\"\", fn:true()))), admin:save-configuration( admin:database-add-range-field-index($config, $dbid, admin:database-range-field-index(\"dateTime\",\"systemStart\",\"\", fn:true()))), admin:save-configuration( admin:database-add-range-field-index($config, $dbid, admin:database-range-field-index(\"dateTime\",\"systemEnd\",\"\", fn:true()))) } catch ($err) {} }; declare function local:create-axes() { try { let $t1 := temporal:axis-create(\"valid\", cts:field-reference(\"validStart\",\"type=dateTime\"), cts:field-reference(\"validEnd\",\"type=dateTime\")), $t2 := temporal:axis-create(\"system\", cts:field-reference(\"systemStart\",\"type=dateTime\"), cts:field-reference(\"systemEnd\",\"type=dateTime\")) return () } catch ($err) {} }; declare function local:create-temporal-collection() { try { let $t:= temporal:collection-create(\"\/perso-verluste\",\"system\",\"valid\") return () } catch ($err) {} }; declare function local:insert-original() { let $root := &lt;vorgang&gt; &lt;perso-id&gt;XYZ&lt;\/perso-id&gt; &lt;name&gt;Alex D端sel&lt;\/name&gt; &lt;status&gt;gestohlen&lt;\/status&gt; &lt;\/vorgang&gt;, $options := &lt;options xmlns=\"xdmp:document-insert\"&gt; &lt;metadata&gt; &lt;map:map xmlns:map=\"http:\/\/marklogic.com\/xdmp\/map\"&gt; &lt;map:entry key=\"validStart\"&gt; &lt;map:value&gt;2019-02-01T08:23:11&lt;\/map:value&gt; &lt;\/map:entry&gt; &lt;map:entry key=\"validEnd\"&gt; &lt;map:value&gt;9999-12-31T11:59:59Z&lt;\/map:value&gt; &lt;\/map:entry&gt; &lt;\/map:map&gt; &lt;\/metadata&gt; &lt;\/options&gt; return temporal:document-insert(\"\/perso-verluste\",\"duesel_alex_270774.xml\", $root, $options) }; declare function local:insert-update() { let $root := &lt;vorgang&gt; &lt;perso-id&gt;XYZ&lt;\/perso-id&gt; &lt;name&gt;Alex D端sel&lt;\/name&gt; &lt;status&gt;gefunden&lt;\/status&gt; &lt;\/vorgang&gt;, $options := &lt;options xmlns=\"xdmp:document-insert\"&gt; &lt;metadata&gt; &lt;map:map xmlns:map=\"http:\/\/marklogic.com\/xdmp\/map\"&gt; &lt;map:entry key=\"validStart\"&gt; &lt;map:value&gt;2019-02-06T08:00:00&lt;\/map:value&gt; &lt;\/map:entry&gt; &lt;map:entry key=\"validEnd\"&gt; &lt;map:value&gt;9999-12-31T11:59:59Z&lt;\/map:value&gt; &lt;\/map:entry&gt; &lt;\/map:map&gt; &lt;\/metadata&gt; &lt;\/options&gt; return temporal:document-insert(\"\/perso-verluste\",\"duesel_alex_270774.xml\", $root, $options) }; ( xdmp:invoke-function(local:create-temporal-fields#0), xdmp:invoke-function(local:create-range-index-fields#0), xdmp:invoke-function(local:create-axes#0), xdmp:invoke-function(local:create-temporal-collection#0), xdmp:invoke-function(local:insert-original#0), xdmp:invoke-function(local:insert-update#0))</element><element id="1eb047a9-b575-4e4f-86f2-077d7a305b53d7e25">xquery version \"1.0-ml\"; import module namespace admin = \"http:\/\/marklogic.com\/xdmp\/admin\" at \"\/MarkLogic\/admin.xqy\"; import module namespace temporal = \"http:\/\/marklogic.com\/xdmp\/temporal\" at \"\/MarkLogic\/temporal.xqy\"; declare namespace local = 'local:'; declare variable $db := \"alex-test\"; declare function local:create-temporal-fields() { let $config := admin:get-configuration(), $dbid := xdmp:database($db) return try { admin:save-configuration( admin:database-add-field($config, $dbid, admin:database-metadata-field(\"validStart\"))), admin:save-configuration( admin:database-add-field($config, $dbid, admin:database-metadata-field(\"validEnd\"))), admin:save-configuration( admin:database-add-field($config, $dbid, admin:database-metadata-field(\"systemStart\"))), admin:save-configuration( admin:database-add-field($config, $dbid, admin:database-metadata-field(\"systemEnd\"))) } catch ($err) {} }; declare function local:create-range-index-fields() { let $config := admin:get-configuration(), $dbid := xdmp:database($db) return try { admin:save-configuration( admin:database-add-range-field-index($config, $dbid, admin:database-range-field-index(\"dateTime\", \"validStart\", \"\", fn:true()))), admin:save-configuration( admin:database-add-range-field-index($config, $dbid, admin:database-range-field-index(\"dateTime\", \"validEnd\", \"\", fn:true()))), admin:save-configuration( admin:database-add-range-field-index($config, $dbid, admin:database-range-field-index(\"dateTime\", \"systemStart\", \"\", fn:true()))), admin:save-configuration( admin:database-add-range-field-index($config, $dbid, admin:database-range-field-index(\"dateTime\", \"systemEnd\", \"\", fn:true()))) } catch ($err) {} }; declare function local:create-axes() { try { let $t1 := temporal:axis-create( \"valid\", cts:field-reference(\"validStart\", \"type=dateTime\"), cts:field-reference(\"validEnd\", \"type=dateTime\")), $t2 := temporal:axis-create( \"system\", cts:field-reference(\"systemStart\", \"type=dateTime\"), cts:field-reference(\"systemEnd\", \"type=dateTime\")) return () } catch ($err) {} }; declare function local:create-temporal-collection() { try { let $t:= temporal:collection-create(\"\/perso-verluste\", \"system\", \"valid\") return () } catch ($err) {} }; declare function local:insert-original() { let $root := &lt;vorgang&gt; &lt;perso-id&gt;XYZ&lt;\/perso-id&gt; &lt;name&gt;Alex D端sel&lt;\/name&gt; &lt;status&gt;gestohlen&lt;\/status&gt; &lt;\/vorgang&gt;, $options := &lt;options xmlns=\"xdmp:document-insert\"&gt; &lt;metadata&gt; &lt;map:map xmlns:map=\"http:\/\/marklogic.com\/xdmp\/map\"&gt; &lt;map:entry key=\"validStart\"&gt; &lt;map:value&gt;2019-02-01T08:23:11&lt;\/map:value&gt; &lt;\/map:entry&gt; &lt;map:entry key=\"validEnd\"&gt; &lt;map:value&gt;9999-12-31T11:59:59Z&lt;\/map:value&gt; &lt;\/map:entry&gt; &lt;\/map:map&gt; &lt;\/metadata&gt; &lt;\/options&gt; return temporal:document-insert(\"\/perso-verluste\", \"duesel_alex_270774.xml\", $root, $options) }; declare function local:insert-update() { let $root := &lt;vorgang&gt; &lt;perso-id&gt;XYZ&lt;\/perso-id&gt; &lt;name&gt;Alex D端sel&lt;\/name&gt; &lt;status&gt;gefunden&lt;\/status&gt; &lt;\/vorgang&gt;, $options := &lt;options xmlns=\"xdmp:document-insert\"&gt; &lt;metadata&gt; &lt;map:map xmlns:map=\"http:\/\/marklogic.com\/xdmp\/map\"&gt; &lt;map:entry key=\"validStart\"&gt; &lt;map:value&gt;2019-02-06T08:00:00&lt;\/map:value&gt; &lt;\/map:entry&gt; &lt;map:entry key=\"validEnd\"&gt; &lt;map:value&gt;9999-12-31T11:59:59Z&lt;\/map:value&gt; &lt;\/map:entry&gt; &lt;\/map:map&gt; &lt;\/metadata&gt; &lt;\/options&gt; return temporal:document-insert(\"\/perso-verluste\", \"duesel_alex_270774.xml\", $root, $options) }; ( xdmp:invoke-function(local:create-temporal-fields#0), xdmp:invoke-function(local:create-range-index-fields#0), xdmp:invoke-function(local:create-axes#0), xdmp:invoke-function(local:create-temporal-collection#0), xdmp:invoke-function(local:insert-original#0), xdmp:invoke-function(local:insert-update#0))</element></elements>