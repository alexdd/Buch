<?xml version="1.0" encoding="UTF-8"?><elements><element id="a1776d29-3de4-4aeb-9f82-1718bfdb333e" type="para">Anlegen des Testszenarios auf der ML Konsole</element><element id="2104ae8b-6b06-4e0c-902d-b3dcaca2482b" type="para">Die Codefragmente aus dem vorherigen Kapitel sind folgend für eine ML Konsolensitzung aufbereitet:</element><element id="a626e0cb-bd49-489b-8765-cdb123a70a52d6e10" type="para">Anlegen der temporalen Properties: , , , </element><element id="7690410f-a848-48ac-9ac1-d2b0c3a7cbf5d6e13" type="para">Anlegen der Indizes zum Suchen über Zeitbereiche: </element><element id="8659af6f-9564-4553-a739-941223db12d0d6e16" type="para">Anlegen der zwei Zeitachsen und  </element><element id="fc9beb7e-9542-46c0-ae1b-b797b1b3df50d6e19" type="para">Anlegen der temporalen Collection </element><element id="f7340d19-8dc9-4530-a6b8-40eab7f87459d6e20" type="para">Anlegen des Originals am 1.2.2019</element><element id="ded7a86f-a732-45dd-841d-ad7155ce16dad6e23" type="para">Aktualisierung am 6.2.2019</element><element id="93de03d3-55c7-4f2d-a65f-e25c92a9be2bd7e25" type="code">xquery version \"1.0-ml\"; import module namespace admin = \"http:\/\/marklogic.com\/xdmp\/admin\" at \"\/MarkLogic\/admin.xqy\"; import module namespace temporal = \"http:\/\/marklogic.com\/xdmp\/temporal\" at \"\/MarkLogic\/temporal.xqy\"; declare namespace local = 'local:'; declare variable $db := \"alex-test\"; declare function local:create-temporal-fields() { let $config := admin:get-configuration(), $dbid := xdmp:database($db) return try { admin:save-configuration( admin:database-add-field($config, $dbid, admin:database-metadata-field(\"validStart\"))), admin:save-configuration( admin:database-add-field($config, $dbid, admin:database-metadata-field(\"validEnd\"))), admin:save-configuration( admin:database-add-field($config, $dbid, admin:database-metadata-field(\"systemStart\"))), admin:save-configuration( admin:database-add-field($config, $dbid, admin:database-metadata-field(\"systemEnd\"))) } catch ($err) {} }; declare function local:create-range-index-fields() { let $config := admin:get-configuration(), $dbid := xdmp:database($db) return try { admin:save-configuration( admin:database-add-range-field-index($config, $dbid, admin:database-range-field-index(\"dateTime\", \"validStart\", \"\", fn:true()))), admin:save-configuration( admin:database-add-range-field-index($config, $dbid, admin:database-range-field-index(\"dateTime\", \"validEnd\", \"\", fn:true()))), admin:save-configuration( admin:database-add-range-field-index($config, $dbid, admin:database-range-field-index(\"dateTime\", \"systemStart\", \"\", fn:true()))), admin:save-configuration( admin:database-add-range-field-index($config, $dbid, admin:database-range-field-index(\"dateTime\", \"systemEnd\", \"\", fn:true()))) } catch ($err) {} }; declare function local:create-axes() { try { let $t1 := temporal:axis-create( \"valid\", cts:field-reference(\"validStart\", \"type=dateTime\"), cts:field-reference(\"validEnd\", \"type=dateTime\")), $t2 := temporal:axis-create( \"system\", cts:field-reference(\"systemStart\", \"type=dateTime\"), cts:field-reference(\"systemEnd\", \"type=dateTime\")) return () } catch ($err) {} }; declare function local:create-temporal-collection() { try { let $t:= temporal:collection-create(\"\/perso-verluste\", \"system\", \"valid\") return () } catch ($err) {} }; declare function local:insert-original() { let $root := &lt;vorgang&gt; &lt;perso-id&gt;XYZ&lt;\/perso-id&gt; &lt;name&gt;Alex Düsel&lt;\/name&gt; &lt;status&gt;gestohlen&lt;\/status&gt; &lt;\/vorgang&gt;, $options := &lt;options xmlns=\"xdmp:document-insert\"&gt; &lt;metadata&gt; &lt;map:map xmlns:map=\"http:\/\/marklogic.com\/xdmp\/map\"&gt; &lt;map:entry key=\"validStart\"&gt; &lt;map:value&gt;2019-02-01T08:23:11&lt;\/map:value&gt; &lt;\/map:entry&gt; &lt;map:entry key=\"validEnd\"&gt; &lt;map:value&gt;9999-12-31T11:59:59Z&lt;\/map:value&gt; &lt;\/map:entry&gt; &lt;\/map:map&gt; &lt;\/metadata&gt; &lt;\/options&gt; return temporal:document-insert(\"\/perso-verluste\", \"duesel_alex_270774.xml\", $root, $options) }; declare function local:insert-update() { let $root := &lt;vorgang&gt; &lt;perso-id&gt;XYZ&lt;\/perso-id&gt; &lt;name&gt;Alex Düsel&lt;\/name&gt; &lt;status&gt;gefunden&lt;\/status&gt; &lt;\/vorgang&gt;, $options := &lt;options xmlns=\"xdmp:document-insert\"&gt; &lt;metadata&gt; &lt;map:map xmlns:map=\"http:\/\/marklogic.com\/xdmp\/map\"&gt; &lt;map:entry key=\"validStart\"&gt; &lt;map:value&gt;2019-02-06T08:00:00&lt;\/map:value&gt; &lt;\/map:entry&gt; &lt;map:entry key=\"validEnd\"&gt; &lt;map:value&gt;9999-12-31T11:59:59Z&lt;\/map:value&gt; &lt;\/map:entry&gt; &lt;\/map:map&gt; &lt;\/metadata&gt; &lt;\/options&gt; return temporal:document-insert(\"\/perso-verluste\", \"duesel_alex_270774.xml\", $root, $options) }; ( xdmp:invoke-function(local:create-temporal-fields#0), xdmp:invoke-function(local:create-range-index-fields#0), xdmp:invoke-function(local:create-axes#0), xdmp:invoke-function(local:create-temporal-collection#0), xdmp:invoke-function(local:insert-original#0), xdmp:invoke-function(local:insert-update#0))</element><element id="5a2c0418-3a17-42dc-a27e-78dda31bc7f6d6e35" type="para">Beachtenswert ist hier,</element><element id="0d69c9fe-a968-4023-919f-a333ec8d1b7dd6e32" type="para">dass die einzelnen Schritte als Funktion über aufgerufen werden. Dieses Konstrukt wird normalerweise benutzt um eine Funktion anonym zu deklarieren und als Transaktion aufzurufen. Marklogic bietet weitere Möglichkeiten transaktional zu arbeiten.</element><element id="da016534-d98c-4116-addc-a8933d7b4e5cd6e35" type="para">Um die 5 Tage zwiachen Verlustmeldung und Wiederauffinden zu simulieren, wurde zwischem dem Anlegen der Dokumente ein Statement eingefügt.</element><element id="48ff0142-18b5-4135-986c-b4f3baf3550ed6e37" type="para">Lassen wir diese Query auf einer frischen Datenbank laufen, so erhalten wir die folgendes Ergebnis:</element></elements>