<div data-attribute-id="51a4584a-9a43-4f8f-ad89-d1c2d88ab6e6" class="topic show_menu tags" data-element="topic" data-deletable="false" data-tektur-editor-id="e3ef5626-28ac-4380-8cea-913165a1c454"><div class="gui-optional-elements-button" contenteditable="false"><div class="menu-icon" style="display:none">+</div></div><div data-attribute-id="9c13d213-40d3-4e74-b343-23cc42779c6d" class="title pmarker tags" data-element="title" data-tektur-editor-id="3f71cf52-eebd-48e0-b169-940927b2a076" contenteditable="true">Funktionen und Module</div><div class="abstract optional show_menu tags" data-element="abstract" data-excluding="shortdesc" style="display:none" data-tektur-editor-id="2531f610-aed7-4749-ae8d-e06500d1e457"><div class="gui-optional-elements-button" contenteditable="false"><div class="menu-icon" style="display:none">+</div></div><div class="placeholder text pmarker tags" data-element="p" data-tektur-editor-id="1a965930-1052-4f05-b405-3b0e35217306" contenteditable="true"></div></div><div data-attribute-id="55287d31-0b28-41fc-a844-f9f51bdf389d" class="body show_menu tags" data-element="body" data-deletable="false" data-tektur-editor-id="b494a95f-c44f-4132-b054-3b66c3a61ac6"><div class="gui-optional-elements-button" contenteditable="false"><div class="menu-icon" style="display:none">+</div></div><div class="section tektur-wrapper tags" data-element="section" data-tektur-editor-id="7ee7b693-7113-41ab-b021-c98d21b81337"><div class="placeholder text pmarker tags" data-element="p" data-tektur-editor-id="0c06f884-0884-4970-9279-8c1df132aea7" contenteditable="true"></div></div><div data-element="section" class="section optional show_menu tags" data-tektur-editor-id="93c5fae7-b6d6-4181-8a16-04a0f826e7d4"><div class="gui-optional-elements-button" contenteditable="false"><div class="menu-icon" style="display:none">+</div></div><div data-attribute-id="2b09a4f1-af09-482e-b220-bbaa5e4f0897d6e5" class="title pmarker tags" data-element="title" data-tektur-editor-id="7469bfd7-dff7-4f75-8e58-ab452cc7f089" contenteditable="true">Funktionen</div><div xmlns:xr="http://www.tekturcms.de/2012/xr/common" xmlns:xlink="http://www.w3.org/1999/xlink" data-attribute-id="5de561e1-87c3-4f46-b36e-c5db56d9ae27d6e7" class="p pmarker tags" data-element="p" data-tektur-editor-id="6adf8e48-71d2-4bc7-964e-9a9050398c44" contenteditable="true">Um bestimmte Abschnitte des XQuery Programm wiederverwendbar zu machen, stehen Funktionsdeklarationen<span class="bracket-tags-marker" id="12423252-51f2-4d55-8ed5-ac27d57d2dd0">[[<span class="bracket-tags">xe1:Programmierkonstrukte;xe2:Funktionen</span>]]</span> zur verfügung. Eine einfache Funktion wäre z.B. diese hier:</div><div class="pre"><div data-attribute-id="f1bf0952-8175-4310-9aae-6c5d763910a8d7e9" data-attribute-xml_space="preserve" class="pre-content pmarker tags" data-element="pre" data-tektur-editor-id="c609c7bd-edd2-44b9-bec3-107128b6a72a" contenteditable="true">declare function local:wrap-header($json) {
  xdmp:add-response-header("Pragma", "no-cache"),
  xdmp:add-response-header("Cache-Control", "no-cache"),
  xdmp:add-response-header("Expires", "0"),
  xdmp:set-response-content-type('text/json; charset=utf-8'),
  $json
};</div></div><div xmlns:xr="http://www.tekturcms.de/2012/xr/common" xmlns:xlink="http://www.w3.org/1999/xlink" data-attribute-id="285caf33-98eb-4945-acad-961bc509ce0cd6e11" class="p pmarker tags" data-element="p" data-tektur-editor-id="0d67e5da-f16c-43a3-9d82-25f7a7eeed63" contenteditable="true">Sie wickelt um einen JSON String eine passende Header Information.</div><div xmlns:xr="http://www.tekturcms.de/2012/xr/common" xmlns:xlink="http://www.w3.org/1999/xlink" data-attribute-id="df24cc6b-17ff-486d-827c-9cec00d4a33bd6e13" class="p pmarker tags" data-element="p" data-tektur-editor-id="ce641ec1-71e8-4a5f-be58-d9549720dd81" contenteditable="true">Damit die Funktion eingebunden werden kann, muss ein passender Namespace<span class="bracket-tags-marker" id="cc36c9e3-23f0-4740-98b4-3171b4f61417">[[<span class="bracket-tags">xe1:XML Konstrukte;xe2:Namespaces</span>]]</span> deklariert werden:</div><div class="pre"><div data-attribute-id="d29b2e24-bd48-4d0c-9336-752835e39856d7e15" data-attribute-xml_space="preserve" class="pre-content pmarker tags" data-element="pre" data-tektur-editor-id="3afbeaf5-8d0d-47bf-ae34-2d091e887ed0" contenteditable="true">declare namespace local = 'local:';</div></div><div xmlns:xr="http://www.tekturcms.de/2012/xr/common" xmlns:xlink="http://www.w3.org/1999/xlink" data-attribute-id="bc7c92a6-2eae-47e2-973b-904415f3fc0ed6e17" class="p pmarker tags" data-element="p" data-tektur-editor-id="99d73b59-74d3-4081-ae9c-1d532936c589" contenteditable="true">Nicht nur bzgl. Wiederverwendbarkeit sind Funktionen praktisch, sondern auch
um ganz elementare Konstrukte, wie <span class="bracket-tags-marker" id="9f578159-1236-4b00-88b6-0c615e39d4e5">[[<span class="bracket-tags">code:while...do</span>]]</span><span class="bracket-tags-marker" id="d1a15a17-9c8e-43de-a5ba-761733e12571">[[<span class="bracket-tags">xe1:Programmierkonstrukte;xe2:Schleifen - while..do</span>]]</span> Schleifen, zu realisieren.</div><div xmlns:xr="http://www.tekturcms.de/2012/xr/common" xmlns:xlink="http://www.w3.org/1999/xlink" data-attribute-id="6ec7b350-f2e7-4922-9e96-9c12fd07957ad6e19" class="p pmarker tags" data-element="p" data-tektur-editor-id="cff31992-c4ec-43c7-b5be-4de27dac9253" contenteditable="true">Dazu nutzt man, wie in der funktionalen Programmierung üblich, die Rekursion:</div><div class="pre"><div data-attribute-id="38f7a47c-c1f5-4138-bab3-fa1ffc895cfbd7e21" data-attribute-xml_space="preserve" class="pre-content pmarker tags" data-element="pre" data-tektur-editor-id="954b81b7-b12f-44ea-84a9-69d1ec2803da" contenteditable="true">declare function local:ist-letzter-wert-in-kette($glied) {
  let $wert := local:komplizierte-berechnung($glied),
    $naechstes-glied := local:komplizierte-berechnung-der-position($glied),
  return
    if ($naechstes-glied and not($wert = 'foobar')) then
      local:durchlaufe-kette($naechstes-glied)
    else
      $wert = 'foobar'
};</div></div><div xmlns:xr="http://www.tekturcms.de/2012/xr/common" xmlns:xlink="http://www.w3.org/1999/xlink" data-attribute-id="844b5256-5000-436c-bca3-c8f1c31f3ffed6e23" class="p pmarker tags" data-element="p" data-tektur-editor-id="8f5b67c2-e133-4e77-aaf7-5d2340d73bb1" contenteditable="true">In diesem kleinen Schnippsel sind schon einige Besonderheiten von 
XQuery zu sehen. Variablenzuweisungen geschehen mit einem Doppelpunkt,
Vergleiche dagegen nur mit einem einfachen "=". Statements werden mit einem
Komma getrennt.</div></div><div data-element="section" class="section optional show_menu tags" data-tektur-editor-id="489d8158-d978-4afc-8630-b7a4d2af6307"><div class="gui-optional-elements-button" contenteditable="false"><div class="menu-icon" style="display:none">+</div></div><div data-attribute-id="dab65cd2-0eb9-4487-99e0-07422d3c3759d6e26" class="title pmarker tags" data-element="title" data-tektur-editor-id="c741d353-5584-4d59-b9bd-ce4b92f96436" contenteditable="true">Module</div><div xmlns:xr="http://www.tekturcms.de/2012/xr/common" xmlns:xlink="http://www.w3.org/1999/xlink" data-attribute-id="2cc3effd-16fe-42c0-9fbd-bfa92cb6d10bd6e28" class="p pmarker tags" data-element="p" data-tektur-editor-id="b244e90e-3016-4346-8d4d-cdf8716c2c19" contenteditable="true">Um eine XQuery Anwendung zu modularisieren<span class="bracket-tags-marker" id="7724543d-62f7-4a4a-8e47-34b4fe882bbc">[[<span class="bracket-tags">xe1:Programmierkonstrukte;xe2:Module</span>]]</span>, können einzelne Skripte in
Module ausgelagert werden. Ein Modul, z.B. common.xqy, wird dabei über einen eigenen
Namespace deklariert:</div><div class="pre"><div data-attribute-id="b92f58fa-51f9-4d24-b674-81490a351421d7e30" data-attribute-xml_space="preserve" class="pre-content pmarker tags" data-element="pre" data-tektur-editor-id="fbd3f5d9-02d0-41bb-bb84-c86522c7f68c" contenteditable="true">module namespace common = "https://www.tekturcms.de/common";</div></div><div xmlns:xr="http://www.tekturcms.de/2012/xr/common" xmlns:xlink="http://www.w3.org/1999/xlink" data-attribute-id="86f1276d-3550-4da6-887d-58012231ea7cd6e32" class="p pmarker tags" data-element="p" data-tektur-editor-id="a4f19205-eb71-449e-8290-ca204cbd45c8" contenteditable="true">Dieses Modul kann dann in anderen Skripten eingebunden werden:</div><div class="pre"><div data-attribute-id="c2e62284-2755-49ec-902b-b00177491b63d7e34" data-attribute-xml_space="preserve" class="pre-content pmarker tags" data-element="pre" data-tektur-editor-id="c1559c92-5be9-4ad1-a331-bcb2643de08d" contenteditable="true">import module namespace common = "https://www.tekturcms.de/common" at "common.xqy";</div></div><div xmlns:xr="http://www.tekturcms.de/2012/xr/common" xmlns:xlink="http://www.w3.org/1999/xlink" data-attribute-id="d3d6ab20-364a-45c0-b0fa-e2e4578331bcd6e36" class="p pmarker tags" data-element="p" data-tektur-editor-id="4c52b6e8-18b9-40a2-90a8-9e28976f3356" contenteditable="true">Funktionen und Variablen werden dann mir dem Namespace<span class="bracket-tags-marker" id="d4eb0bba-adc9-4d99-bdc7-80758e80b481">[[<span class="bracket-tags">xe1:XML Konstrukte;xe2:Namespaces</span>]]</span> geprefixt aufgerufen:</div><div class="pre"><div data-attribute-id="725f02a0-c775-44c5-919f-04adc078f51bd7e38" data-attribute-xml_space="preserve" class="pre-content pmarker tags" data-element="pre" data-tektur-editor-id="cbe7e4f5-c004-4add-a3d7-d3fb8a5fcd45" contenteditable="true">Funktionsaufruf: common:wrap-response-header(...)
Variablenauswertung: $common:collection-books</div></div><div class="placeholder text pmarker tags" data-element="p" data-tektur-editor-id="fb99bfbd-f0b0-4aa8-a315-739327e5115c" contenteditable="true"></div></div></div></div>