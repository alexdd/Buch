[{"id":"9c13d213-40d3-4e74-b343-23cc42779c6d","type":"para","text":"Funktionen und Module","title":" Funktionen und Module "},{"id":"2b09a4f1-af09-482e-b220-bbaa5e4f0897d6e5","type":"para","text":"Funktionen","title":" Funktionen und Module "},{"id":"5de561e1-87c3-4f46-b36e-c5db56d9ae27d6e7","type":"para","text":"Um bestimmte Abschnitte des XQuery Programm wiederverwendbar zu machen, stehen Funktionsdeklarationen zur verfügung. Eine einfache Funktion wäre z.B. diese hier:","title":" Funktionen und Module "},{"id":"b928a744-59b9-4a4f-825a-fd61c1d8290dd7e9","type":"code","text":"declare function local:wrap-header($json) { xdmp:add-response-header(\"Pragma\", \"no-cache\"), xdmp:add-response-header(\"Cache-Control\", \"no-cache\"), xdmp:add-response-header(\"Expires\", \"0\"), xdmp:set-response-content-type('text\/json; charset=utf-8'), $json };","title":" Funktionen und Module "},{"id":"285caf33-98eb-4945-acad-961bc509ce0cd6e11","type":"para","text":"Sie wickelt um einen JSON String eine passende Header Information.","title":" Funktionen und Module "},{"id":"df24cc6b-17ff-486d-827c-9cec00d4a33bd6e13","type":"para","text":"Damit die Funktion eingebunden werden kann, muss ein passender Namespace deklariert werden:","title":" Funktionen und Module "},{"id":"b61f43cd-712a-4f2a-86cc-d6d1e52b2892d7e15","type":"code","text":"declare namespace local = 'local:';","title":" Funktionen und Module "},{"id":"bc7c92a6-2eae-47e2-973b-904415f3fc0ed6e17","type":"para","text":"Nicht nur bzgl. Wiederverwendbarkeit sind Funktionen praktisch, sondern auch um ganz elementare Konstrukte, wie Schleifen, zu realisieren.","title":" Funktionen und Module "},{"id":"6ec7b350-f2e7-4922-9e96-9c12fd07957ad6e19","type":"para","text":"Dazu nutzt man, wie in der funktionalen Programmierung üblich, die Rekursion:","title":" Funktionen und Module "},{"id":"fbb8a01b-99cb-436b-b525-364e4cd3c4cad7e21","type":"code","text":"declare function local:ist-letzter-wert-in-kette($glied) { let $wert := local:komplizierte-berechnung($glied), $naechstes-glied := local:komplizierte-berechnung-der-position($glied), return if ($naechstes-glied and not($wert = 'foobar')) then local:durchlaufe-kette($naechstes-glied) else $wert = 'foobar' };","title":" Funktionen und Module "},{"id":"844b5256-5000-436c-bca3-c8f1c31f3ffed6e23","type":"para","text":"In diesem kleinen Schnippsel sind schon einige Besonderheiten von XQuery zu sehen. Variablenzuweisungen geschehen mit einem Doppelpunkt, Vergleiche dagegen nur mit einem einfachen \"=\". Statements werden mit einem Komma getrennt.","title":" Funktionen und Module "},{"id":"dab65cd2-0eb9-4487-99e0-07422d3c3759d6e26","type":"para","text":"Module","title":" Funktionen und Module "},{"id":"2cc3effd-16fe-42c0-9fbd-bfa92cb6d10bd6e28","type":"para","text":"Um eine XQuery Anwendung zu modularisieren , können einzelne Skripte in Module ausgelagert werden. Ein Modul, z.B. common.xqy, wird dabei über einen eigenen Namespace deklariert:","title":" Funktionen und Module "},{"id":"ad8b2810-5407-44d7-9e8c-1413f3aa07ced7e30","type":"code","text":"module namespace common = \"https:\/\/www.tekturcms.de\/common\";","title":" Funktionen und Module "},{"id":"86f1276d-3550-4da6-887d-58012231ea7cd6e32","type":"para","text":"Dieses Modul kann dann in anderen Skripten eingebunden werden:","title":" Funktionen und Module "},{"id":"5ceda42f-4617-4275-addb-c1ef28d9012cd7e34","type":"code","text":"import module namespace common = \"https:\/\/www.tekturcms.de\/common\" at \"common.xqy\";","title":" Funktionen und Module "},{"id":"d3d6ab20-364a-45c0-b0fa-e2e4578331bcd6e36","type":"para","text":"Funktionen und Variablen werden dann mir dem Namespace geprefixt aufgerufen:","title":" Funktionen und Module "},{"id":"3c7538db-b4ec-4fc6-8f4d-a762ebf914d3d7e38","type":"code","text":"Funktionsaufruf: common:wrap-response-header(...) Variablenauswertung: $common:collection-books","title":" Funktionen und Module "}]