<?xml version="1.0" encoding="UTF-8"?><topic id="0ede2c7f-f0c8-4212-9c31-cf3caefa613c"><title id="47f2fdc5-eca0-4e9b-bfc8-f2fbd76403d8">Professionelle XML Verarbeitung </title><body id="4c47d822-0170-4ff7-b065-932773eb0e10"><p id="25b21e23-d4ce-4721-a7d1-2c6b83245a70">Vom Single-Source Publishing bis zur Generierung von Java Code aus Klassendiagrammen. XSLT ist in vielen großen Softwareprojekten vertreten. Heute liefert eine Suche nach [[code:&lt;xsl:stylesheet]] bspw. 14.868.501 [[link]]Treffer.[[fn:https://github.com/search?q=xsl%3Astylesheet&amp;type=Code*GitHub Suche nach XSLT Code Schnippseln mit 14Mio Treffern]]</p><section id="522f1b91-6fa8-48b8-85f7-405b950fedc8d7e6"><title id="012db970-b72c-425a-a3ad-3e817e002282d6e7">Single Source Publishing</title><p id="e88e78e7-d931-45f4-bb7f-0e055e7db65cd6e9">Aus einer Quelle werden viele Ausgabe Formate generiert. Gängige Formate in der Technischen Dokumentation sind elektronische Ausgabe-Formate wie: <b id="96c979b3-1b62-4707-a821-d8c6c58f3508d7e11" href="undefined">CHM</b>, <b id="9eef9aae-cacc-4a59-aef7-27a96f4864f4d7e14" href="undefined">EclipseHelp</b>, <b id="42478335-d4e1-476a-9f9d-5ccaf364e1c0d7e17" href="undefined">JavaHelp</b>, <b id="e54c8f5a-bc0d-4860-97ba-f6046a85feaed7e20" href="undefined">ePub</b>, ..., Print-Ausgabe Formate, wie <b id="e4566283-3ece-43ee-a03d-87578fba2542d7e23" href="undefined">PDF</b> oder <b id="d13e1010-6e2f-4617-a416-058dd5d4539fd7e27" href="undefined">Adobe Framemaker</b>, oder <b id="ff32b0fa-426d-4d16-90f4-e41b35d98968d7e30" href="undefined">XML</b> Standard Austauschformate, wie <b id="54325d75-82c5-4d6e-9b5b-27b5247d949cd7e33" href="undefined">DITA</b>, <b id="593915f9-ddf7-45c3-acce-e5e497d8e29fd7e36" href="undefined">S1000D</b>, <b id="a784261b-f555-46ad-805b-9a95f5acfd89d7e39" href="undefined">PI-MOD</b>[[xe1:Standards;xe2:PI-MOD]] oder <b id="a4f5d850-42a5-4db2-96fe-47f33beb8cd9d7e42" href="undefined">TEI</b>[[xe1:Standards;xe2:TEI]]. </p><p id="c4c67a7d-ed1d-4fbe-88be-439fd8730e13d7e45"><b id="234e3abb-1395-48a9-b188-f159327ed8a6d7e46">Vorteile:</b></p><ul id="553bfff3-3f37-487a-bcf4-41a7af675214d6e11"><li id="d41fdd94-47cd-4579-bb54-832ec1bd4bafd6e12"><p id="ada9653b-2335-47be-bcd7-a5042e1aedfed6e13">Bei einer Änderung in der XML Quelle werden auch automatisch alle anschließenden Formate aktualisiert.</p></li><li id="33e6382f-3e2e-433b-9f96-7b0d139fe8ecd6e15"><p id="9c7312ef-0291-4c2d-8fd1-5e3454490334d6e16">Strikte Trennung von Content/Semantik und Layout/Design.</p></li><li id="fb06e39f-6f64-4ae1-b60b-98cd66ee1260d6e18"><p id="134e480d-ab4c-4554-95d7-55cceb619677d6e19">Auf der XML Quelle sind XML Features möglich, wie:</p><ul id="41d8069b-33e7-42ff-b98f-870e462d3ed0d7e58"><li id="30b455b8-073a-4cba-884f-9191e83799a4d7e59"><p id="278bf9c5-f50f-4131-9fa0-927ce65d1713d7e60"><b id="0ced1452-b115-44ff-988e-a5c38a15b262d7e61">Modularisierung</b> erlaubt die fein-granulare Wiederverwendung[[xe1:Konzepte;xe2:Wiederverwendung]] von Content-Bausteinen, sowie das Verlinken, Filtern, Suchen und Exportieren derselben.</p></li><li id="e1ca0a64-798d-4fd0-adba-adbe3911d463d7e64"><p id="702993f5-9ec6-4f9b-a2f5-c5c35b872471d7e65"><b id="13ed37f4-e9cb-43cc-8a3e-b57f75bf8c20d7e66">Generalisierung</b>[[xe1:Konzepte;xe2:Generalisierung und Spezialisierung]]</p><p id="980c4fd2-da2e-4857-9beb-3ac7f41f12cdd7e69"> ist ein DITA Konzept, welches die Wiederverendung von angepassten Topics in anderen DITA Systemen ermöglicht.</p></li><li id="ed2579fb-a6b6-4bae-99d0-d49e2c62fdbed7e71"><p id="9789d7b8-4835-4f09-9c63-bfccbf6039b8d7e72"><b id="f5116d2b-fce3-410c-b5cd-481da95634f3d7e73">Gültigkeiten</b>[[xe1:Konzepte;xe2:Gültigkeitem]] erlauben die bedingte Anwendung von Content-Bestandteilen auf Satz- und Wort-Ebene.</p></li><li id="fe6ddc89-7567-49aa-a4e3-47c1981daae5d7e76"><p id="131165d9-c478-4b7e-b3b3-e022a25903edd7e77"><b id="df4081aa-6d50-4f4e-9a00-0688a6a51839d7e78">Versionierung</b>[[xe1:Konzepte;xe2:Versionierung]] und Diffing[[xe1:Konzepte;xe2:Diffing]] - Vergleich von Änderungen zwischen Versionen.</p></li><li id="f1f17c63-0878-4aa8-afab-4a7833d9dd39d7e81"><p id="595b54a9-730a-488a-9106-bd81eef14d3cd7e82"><b id="508fbbe6-b303-49a6-ada7-6d43119328b8d7e83">Intelligente Querverweise</b>[[xe1:Konzepte;xe2:Intelligente Querverweise]]: Ein Link zwischen einzelnen XML Topics bleibt versionstreu.</p></li><li id="c85befec-6ba1-4964-add2-51ed7e2c25fdd7e86"><p id="4f8f015f-0ad1-4648-8c17-9e34c57bf4a8d7e87"><b id="bd56551d-8025-4e42-91d6-5afc2b4bfcb1d7e88">Automatischer Satz</b>, inkl. Zusamenhalte- und Trennregeln für Seiten, Absätze und Blöcke (Listen, Tabellen, etc).</p></li></ul></li><li id="5efb1726-da14-40f9-8780-2f3302897666d6e21"><p id="23dc2a71-64a3-4305-b3d7-81094ca5bcd8d6e22">Veraltete Formate können ausgetauscht werden, ohne dass der Content geändert werden muss oder verlorengeht.</p></li><li id="25171ed0-23f9-4687-b1aa-f1f205f44f9ed6e24"><p id="47b354c2-4b48-48c9-ac10-ed3f041feb2fd6e25">Die XML Quelle kann ohne Aufbereitung in anderen Systemen wiederverwendet werden.</p></li><li id="23038ff3-7ac5-410b-a730-cb33a3c50c9ad6e27"><p id="252ae481-7a29-4117-9b72-94ae88638e75d6e28">Es gibt weit verbreitete <b id="e0655849-2b8e-413f-bc04-f17a53b3965dd6e55">Standards</b> zur Struktur der XML Quelle.</p></li><li id="a1cc694b-da1e-4941-9777-01442a21755fd6e30"><p id="578ead23-ba8a-4186-bf96-e9c9dae8ec9fd6e31">Nur das XML wird in der Datenhaltung persistiert.</p></li><li id="c6a284d6-23aa-404e-8b5d-4f76ee4dab97d6e33"><p id="c6122f80-b8a0-4cca-9939-4122325dfef2d6e34">Es gibt spezialisierte <xref href="3337f433-44bf-430d-a809-73fd1de5ba6c" id="f8e5db32-6071-4a87-b408-9b667635dfd8" type="topic">XML Datenbanken </xref>, die besonders gut auf Baumstrukturen arbeiten. (Dokumente sind per se baum-strukturiert und sind eigentlich für eine relationale Datenbank ungeignet)</p></li></ul><p id="df845a80-c690-4551-af36-90a401ff12aed6e36">Die Redaktionssysteme der Technischen Dokumentation der führenden Hersteller in Deutschland haben XML unter der Haube und setzen auf die <b id="0e94bef5-f15d-4209-b53c-26b68a6604c8d6e69">Single-Source Strategie</b>.</p></section><section id="74cf8adf-6dd4-4f74-8d8b-51657d273f17d7e117"><title id="c2ea4ffe-bfc9-4c96-b5d9-d793083fc510d6e39">Code Generierung</title><p id="62ada423-a662-4d08-ba65-63ccadd079ced6e41">Nachdem man bei XSLT im Format der Ausgabe frei ist, kann auch direkt Plain-Text mit  XSLT Regeln generiert werden. Daher liegt es nahe sich jegliche Form von Quelltext aus einer XML Repräsentation erzeugen zu lassen.[[xe1:Anwendungsgebiete;xe2:Code Generierung]]</p><p id="52746a75-07e2-4452-8f21-1fb22d4e1332d6e43">Beispielsweise speichern gängige <b id="bd402eab-050a-438c-a88a-bb0762c33858d7e153">CASE Tools</b> (Computer Aided Software Engineering) UML Diagramme im XML Format ab, so z.B. [[link]]ArgoUML[[fn:http://argouml.tigris.org*ArgoUML ist ein freier UML Editor]].</p><p id="a655bc68-8f84-470f-ad3f-a5bb41b19aa6d6e48">Diese Klassendiagramme lassen sich mittels XSLT direkt in Java-Code transformieren, wie z.B. in einem kleinen Open Source Projekt (aus vergangenen Tagen) : [[link]]Butterfly Code Generator[[fn:http://butterflycode.sourceforge.net*Damit kann man sich Code aus UMl Klassendiagrammen generieren lassen, natürlich XSLT basiert]]</p><p id="ba1967f4-d697-4466-8455-dd17d935c68ed6e53">Es gibt auch einen schönen Artikel dazu im [[link]]Java World Journal[[fn:https://www.javaworld.com/article/2073998/java-web-development/generate-javabean-classes-dynamically-with-xslt.html*Weiterführende Lektüre zum Thema Code-Generierung mit XSLT]].</p></section><section id="e01c68ea-d5c4-4794-9a9d-825ce72baa23d7e131"><title id="bd0e17e7-dce2-45a0-b5eb-90297e678e88d6e56">Migrationen und Konvertierungen</title><p id="b7221c07-bea2-4a1e-a1cd-09318580ea8dd6e58">Für jede erdenkliche Art der Migration[[xe1:Anwendungsgebiete;xe2:Migration]] eines XML Datenbestands oder eines Datenbank-Dumps / -Exports im XML Format, zwischen Produktversionen oder zwischen Dienstleister- und Dienstnutzer-Systemen, bietet sich XSLT zur Transformation an.</p><p id="755dccf0-48c4-4b8f-a778-4e4eb27089a9d6e60">Dabei ist zu beachten, dass XSLT besonders schnell und gut auf verschachtelten Strukturen arbeitet. Entartet ein Baum zur Liste und/oder sind nur geringe Strukturanpassungen notwendig, wird man sich mit einem schnellen SAX Parser leichter tun. </p><p id="e438ab3c-2aa9-4400-a40a-9181c1911835d6e90"> Mittels der XSLT 3.0 Streaming Option können auch sehr große XML Quellen (Big Data) verarbeitet werden. Saxon bietet bspw. diese [[link]]Streaming Option[[fn:http://www.saxonica.com/html/documentation/sourcedocs/streaming/*Streaming ist eine Technik zur Verarbeitung großer XML Daten - Stichwort Big Data - mit XSLT3.0]].</p></section></body></topic>