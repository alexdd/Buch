<?xml version="1.0" encoding="UTF-8"?><topic id="821f8271-e9a1-43e8-ba9a-b1e8aa0ce4f4"><title id="9b1e7086-25cc-4bdf-ba77-6adfb503603b">Erste Schritte mit XSpec </title><body id="9036318d-3693-4e5c-be19-8a62e8748b03"><p id="eef21ef4-793e-4fef-9f1e-a22ecf24b64c">XSpec[[xe1:Tools;xe2:XSpec]] ist ein [[link]]Test-Framework[[fn:https://github.com/xspec*XSpec auf GitHub]][[xe1:Test-Framework]] für XSLT, XQuery und Schematron. 
Um beispielsweise komplexe Schematron Regeln zu testen, hinterlegt man in einem <b id="f6d68885-0ad1-420b-82ea-92bd5889e0bcd6e9">Test-Szenario</b> 
Erwartungswerte für positive und negative Testfälle in Form von XML Schnippseln. hallo</p><pre id="2bfe8abd-9177-4444-90dc-2a1388ebd6ebd7e9" xml:space="preserve">&lt;test-szenario&gt;
  &lt;testfall&gt;
    &lt;personen&gt;
      &lt;person&gt;
        &lt;vorname&gt;Horst&lt;/vorname&gt;
        &lt;nachname&gt;Schlämmer&lt;/nachname&gt;
        &lt;gewicht&gt;100&lt;/gewicht&gt;
      &lt;/person&gt;
      &lt;person&gt;
        &lt;vorname&gt;Gundula&lt;/vorname&gt;
        &lt;nachname&gt;&lt;/nachname&gt;
        &lt;gewicht&gt;60&lt;/gewicht&gt;
      &lt;/person&gt;
    &lt;/personen&gt;
  &lt;/testfall&gt;
&lt;/test-szenario&gt;</pre><p id="a495ec01-4794-4e28-b47f-0313ab934100d6e26">in einer XSpec Datei [[code:*.xspec]] werden <b id="31a39752-2463-4c05-bbc6-043c7fa89e67d6e28">Assert- und Not-Assert-Methoden</b>[[xe1:Assert- und Not-Assert]]deklariert:</p><pre id="1a85d428-da2c-4573-a188-b767fe6486ecd7e16" xml:space="preserve">&lt;x:description xslt-version="2.0" xmlns:x="http://www.jenitennison.com/xslt/xspec" 
               schematron="test.sch"&gt;
  &lt;x:scenario label="ALL"&gt;
    &lt;x:context href="test.xml"/&gt;
    &lt;x:expect-not-assert id="person-nachname-rule" location="//person[1]/nachname"/&gt;
    &lt;x:expect-assert id="person-nachname-rule" location="//person[2]/nachname"/&gt;
  &lt;/x:scenario&gt;
&lt;/x:description&gt;</pre><p id="9aac4097-bb50-44d5-8827-bd1775ce18fcd6e39">Grds. bdeutet ein Assert, dass das Mapping zwischen tatsächlichem Wert und Erwartungswert des
Testfalls[[xe1:Testfall]] positiv erfüllt ist. Beim Not-Assert ist das Gegenteil der Fall. Im obigen Beispiel
reichen zwei Regeln, um den Testfall vollständig abzudecken.</p><p id="350b086a-a78e-47cc-9a3e-4f8c596fadf4d6e41">Wenn man Schematron[[xe1:Tools;xe2:Schematron]] Regeln mit Hilfe von XSpec testen will, dann muss man ein bisschen um 
die Ecke denken. Denn auch diese Regeln werden mittels Assert und Not-Assert modelliert.</p><table id="74398f53-1d8d-4c67-9e14-beccdec6f050d7e22" pgwide="1" frame="all"><tgroup id="078392b5-0a36-4f36-8d3a-2ee7e93cb459d7e23" cols="3"><colspec id="aea8d087-3ff2-4c53-876e-2bd046a1065cd7e24" colwidth="" colname="col0"/><colspec id="82e646b9-6d1e-48fb-8b42-c9071a736e94d7e25" colwidth="" colname="col1"/><colspec id="a53c9352-f363-4d25-b378-42cfd8d3d24dd7e26" colwidth="" colname="col2"/><thead id="09fc04d0-93ec-4687-8609-f832a681661ad7e27"><row id="b62b5d12-5eb0-4866-89e4-6b1d3fe87154d7e28"><entry id="04d29fad-28fa-46fc-9996-8c4627cac0b9d7e29" colname="col0" width=""/><entry id="f49c9fe2-72ca-400e-b768-00f44224a199d7e30" colname="col1" width=""/><entry id="0d195fc8-ba12-4c95-94e1-f7530b165e26d7e31" colname="col2" width=""/></row></thead><tbody id="cef24b0f-c5ee-452b-80d5-e4107886582ad7e32"><row id="368ce8f5-cc15-4f04-8932-5542be3bb7a6d7e33"><entry id="08c8cf6a-ecfe-4b24-b0be-6426dfc4b55cd7e34" colname="col0" width=""/><entry id="4fa9b955-8b61-497b-95f2-9b0dc21a1fd1d7e35" colname="col1" width=""/><entry id="2e58a823-12d1-4498-87be-2c8565911c1dd7e36" colname="col2" width=""/></row><row id="94e9be0f-eb2b-4e1f-8ac6-a565c24d5d88d7e37"><entry id="1b1bcf1a-2805-4d6d-a585-3ff1f6fd60a0d7e38" colname="col0" width=""/><entry id="072d0a4f-c64c-4404-8dfc-1b5b35de8215d7e39" colname="col1" width="" namest="col1" nameend="col2"><p id="3160dd2d-e96d-4e25-9f18-a141ccb0a2d5d7e40">werwerwerwer</p><p id="7608b8a9-b375-4cd6-a6af-79adadbe2db5d7e42">qwrqwrqwrqwrq</p></entry></row><row id="647e66e2-10ef-4b5e-b4dc-794d6142997fd7e44"><entry id="90507099-44ad-4a16-9e24-9e53bb07209fd7e45" colname="col0" width=""/><entry id="00b8883a-96dd-4bcc-b84f-652c53f59c2fd7e46" colname="col1" width=""/><entry id="c6f29492-1ac4-4126-8ca7-acb12b0869fbd7e47" colname="col2" width=""/></row></tbody></tgroup></table><pre id="1f7884ba-1bd8-4158-82f6-0776b6337c5fd7e48" xml:space="preserve">&lt;sch:schema xmlns:sch="http://purl.oclc.org/dsdl/schematron" 
            xmlns:xsl="http://www.w3.org/1999/XSL/Transform" queryBinding="xslt2"&gt;
  &lt;sch:pattern id="main"&gt;
    &lt;sch:rule context="nachname"&gt;
      &lt;sch:assert id="person-nachname-rule" role="error" test="normalize-space(.)"&gt;
        Der Nachname der Person mit ID: &lt;sch:value-of select="@id"/&gt; fehlt! 
      &lt;/sch:assert&gt;
    &lt;/sch:rule&gt;
  &lt;/sch:pattern&gt;
&lt;/sch:schema&gt;</pre><p id="5da4afab-3eda-4027-956a-1e72b6dd19b3d6e48">In der Schematron-Regel wird zugesichert (Assert), dass jede Person einen Nachnamen hat.</p><p id="6d2dba49-cecd-4315-8956-4beb19e4af08d6e50">Hat sie keinen Nachnamen, so wird der Bericht zum Fehlerfall in die Schematron Ergebnisdatei
geschrieben. Diese Datei wertet nun XSpec aus.</p><note id="428d32ca-d32e-487f-92a2-ca100ecab789d7e54"><p id="611d787d-7b54-46dd-9548-158dd6db0bfcd6e53">Erscheint ein Fehler (= das Feld <b id="171bb098-8941-486f-b6e0-c577438c996dd6e55">nachname</b> ist leer), so greift bei XSpec die Assert-Regel! Das ist die umgekehrte Logik zu den Schematron Regeln.</p></note><p id="1ed9b5fd-88c2-4a6b-998b-6eac55854ec7d6e58">Als Eselsbrücke kann man
ein Assert in der XSpec Datei gleichsetzen mit <b id="30100a12-de8b-4e03-a6ff-86361fb1e578d6e60">Appear</b> und ein Not-Assert mit
<b id="be31f20f-1e9b-4c0d-b42d-f12afa043917d6e63">Not-Appear</b>. [[xe1:Tipps und Tricks;xe2:Appear- und Not-Appear]]</p><p id="5f9a44b2-0d88-4bf3-81f2-d93a28301049d6e67">Ein Assert sichert also zu, dass sich ein Fehlerbericht in der
Schematron Ergebnisdatei zum Testfall befindet. Ein Not-Assert sichert zu, dass
sich kein Fehlerbericht befindet. </p><p id="23ee0dc1-c910-43f7-a86b-442562947535d6e69"> Wie man sich leicht vorstellen kann, sind Assert-Regeln in diesem Fall leicht zu finden,
dazu muss man nur die Schematron Testregeln ins Leere zeigen lassen. Alles ist grün
und alles ist gut - dem Augenschein nach.</p></body></topic>