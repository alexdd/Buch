<div data-attribute-id="7f9615d0-3d92-4ec1-813b-db4b788b6efd" class="topic show_menu tags" data-element="topic" data-deletable="false" data-tektur-editor-id="cec01069-ec9d-400e-9ca3-313dabc2232c"><div class="gui-optional-elements-button" contenteditable="false"><div class="menu-icon" style="display:none">+</div></div><div data-attribute-id="86a66f53-eb4a-4cc0-b14c-12d5c2bb84bd" class="title pmarker tags" data-element="title" data-tektur-editor-id="81517134-4b92-4963-a461-bcef2c4d4a9e" contenteditable="true">If..then..else Ausdrücke</div><div class="abstract optional show_menu tags" data-element="abstract" data-excluding="shortdesc" style="display:none" data-tektur-editor-id="f03607ed-b3f1-46a0-85f8-5e231d73a913"><div class="gui-optional-elements-button" contenteditable="false"><div class="menu-icon" style="display:none">+</div></div><div class="placeholder text pmarker tags" data-element="p" data-tektur-editor-id="19cea5c5-5cd5-4ee5-a8ba-ab197ec81c12" contenteditable="true"></div></div><div data-attribute-id="c47ce675-c5d5-48bd-a4f9-73eb4cb6297c" class="body show_menu tags" data-element="body" data-deletable="false" data-tektur-editor-id="6ab9b187-e999-4574-b56a-ffb3e64fab7c"><div class="gui-optional-elements-button" contenteditable="false"><div class="menu-icon" style="display:none">+</div></div><div class="section tektur-wrapper tags" data-element="section" data-tektur-editor-id="d08cedac-e4d6-4ac0-a4d2-78092edc6243"><div xmlns:xr="http://www.tekturcms.de/2012/xr/common" xmlns:xlink="http://www.w3.org/1999/xlink" data-attribute-id="31bf12f5-ecec-4ada-965f-cb4e1539afc6" class="p pmarker tags" data-element="p" data-tektur-editor-id="ada6c3d1-d945-4eed-ba69-b927463414f9" contenteditable="true">In nicht-funktionalen Programmiersprachen sind die Schlüsselwörter [[code:if]] und [[code:then]][[xe1:Programmierkonstrukte;xe2:Bedingte Anweisung - if..then..else]] dazu da, um dem Compiler oder Interpreter mitzuteilen, dass eine bedingte Anweisung ausgewertet werden soll.</div><div xmlns:xr="http://www.tekturcms.de/2012/xr/common" xmlns:xlink="http://www.w3.org/1999/xlink" data-attribute-id="c9ab5b21-d799-4bb6-a020-d7ab5750146ed6e12" class="p pmarker tags" data-element="p" data-tektur-editor-id="25b9e398-9c3a-4c1b-bdef-920ae08933ab" contenteditable="true">Was für den Nicht-funktionalen Programmierer etwas befremdlich erscheint, ist der Umstand, dass in XQuery [[code:if..then]] als Ausdrücke ausgewertet werden.</div><div xmlns:xr="http://www.tekturcms.de/2012/xr/common" xmlns:xlink="http://www.w3.org/1999/xlink" data-attribute-id="e4d038c8-39fe-4f47-a81c-4a7d16a10c3ed6e17" class="p pmarker tags" data-element="p" data-tektur-editor-id="4cd0fbe8-4cad-4e9d-9d37-8167806b61cd" contenteditable="true">Das ist einerseits sehr praktisch, weil es richtig angewandt den Code verkürzt und damit das Wesentliche herausstellt, kann aber auch weiter zur allg. Verwirrung bzgl. des kryptischen XQuery Codes beitragen.</div></div><div data-element="section" class="section optional show_menu tags" data-tektur-editor-id="acfb4912-3bca-4eb4-aa60-4fd93881b671"><div class="gui-optional-elements-button" contenteditable="false"><div class="menu-icon" style="display:none">+</div></div><div data-attribute-id="b0df228c-1f72-4a12-9302-805fa0022b03d6e11" class="title pmarker tags" data-element="title" data-tektur-editor-id="905424ce-5666-4c88-811f-d03831df26b7" contenteditable="true">XQuery Server Application</div><div xmlns:xr="http://www.tekturcms.de/2012/xr/common" xmlns:xlink="http://www.w3.org/1999/xlink" data-attribute-id="2d0364b2-f8b1-47fa-996e-0f9ceba95e4fd6e13" class="p pmarker tags" data-element="p" data-tektur-editor-id="12dc52f4-c197-4bde-8195-959187bb5794" contenteditable="true">Betrachten wir ein einfaches Beispiel: Wir generieren auf einer Marklogic-Webapp eine JSON Response. Da wir diesen Mechanismus an mehreren Stellen im Code einsetzen, empfiehlt es sich das Rendern des Headers in eine Funktion auszulagern.</div><div class="pre"><div data-attribute-id="facbdf6a-05f7-4e82-9c76-f2f76cdc62d9d6e15" data-attribute-xml_space="preserve" class="pre-content pmarker tags" data-element="pre" data-tektur-editor-id="8a72ff0e-24f5-4c64-b693-a9f2ca7d4ecd" contenteditable="true">declare function common:wrap-response($json)
{
  xdmp:add-response-header("Pragma", "no-cache"),
  xdmp:add-response-header("Cache-Control", "no-cache"),
  xdmp:add-response-header("Expires", "0"),
  xdmp:set-response-content-type('text/json; charset=utf-8'),
  $json
};</div></div><div xmlns:xr="http://www.tekturcms.de/2012/xr/common" xmlns:xlink="http://www.w3.org/1999/xlink" data-attribute-id="9c2999c6-968d-4719-9036-fd0664b5bd57d6e19" class="p pmarker tags" data-element="p" data-tektur-editor-id="6713d077-d631-4cbe-93c8-dc651ad31379" contenteditable="true">In unserem Request-Handler wird je nach Auswertung einer Variablen eine 
bedingte Anweisung ausgeführt, diese sieht bspw. so aus:</div><div class="pre"><div data-attribute-id="71f3ff40-4cff-4830-872f-196dea21f9e4d6e19" data-attribute-xml_space="preserve" class="pre-content pmarker tags" data-element="pre" data-tektur-editor-id="8900b1b6-e3f3-40ae-b645-97abb2d16661" contenteditable="true">let $name := xdmp:get-request-field('name'),
    $is-afternoon := xs:time(current-dateTime()) gt xs:time('12:00:00')
return 
  if ($is-afternoon) then 
   common:wrap-response(xdmp:unquote(concat('{"greeting":"Good Afternoon! ',$name,'!"}')))
  else
   common:wrap-response(xdmp:unquote(concat('{"greeting":"Good Morning! ',$name,'!"}')))</div></div><div xmlns:xr="http://www.tekturcms.de/2012/xr/common" xmlns:xlink="http://www.w3.org/1999/xlink" data-attribute-id="7795845c-ea88-42f8-8adf-ab4d0b5404fcd6e23" class="p pmarker tags" data-element="p" data-tektur-editor-id="a4193638-9c3c-46d1-a468-391ebe9bc1f6" contenteditable="true">Als prozeduraler Programmierer wäre ich mit diesem Switch voll und ganz zufrieden, 
der funktionale Programmier erkennt abaer sofort einen Optimierungsbedarf.</div><div xmlns:xr="http://www.tekturcms.de/2012/xr/common" xmlns:xlink="http://www.w3.org/1999/xlink" data-attribute-id="a553de2e-d73c-4a97-a1b1-5283220ffef3d6e25" class="p pmarker tags" data-element="p" data-tektur-editor-id="d4e09320-1d7f-48f7-8d18-8dfdc097b97c" contenteditable="true">Da es sich bei der bedingten Anweisung auch um einen Ausdruck handelt, der [[code:true}} oder [[code:false}} zurückgibt, können wir die gleichen Funktionsaufrufe herausziehen:</div><div class="pre"><div data-attribute-id="dc8f75d3-b4fb-453b-9d04-d5b6ffe174fdd6e25" data-attribute-xml_space="preserve" class="pre-content pmarker tags" data-element="pre" data-tektur-editor-id="6cf8abfd-edad-4c7c-b8ab-38cb4f4a915a" contenteditable="true">ommon:wrap-response(xdmp:unquote(
    let $is-afternoon := xs:time(current-dateTime()) gt xs:time('12:00:00')
        return 
            if ($is-afternoon) then concat('{"greeting":"Good Afternoon! ',$name,'!"}') 
            else concat('{"greeting":"Good Morning! ',$name,'!"}')
)</div></div><div xmlns:xr="http://www.tekturcms.de/2012/xr/common" xmlns:xlink="http://www.w3.org/1999/xlink" data-attribute-id="c1d6576a-56e3-4dda-bc18-342e7e458553d6e29" class="p pmarker tags" data-element="p" data-tektur-editor-id="3576df78-1c33-49f3-8ff7-2235cb8cd7fb" contenteditable="true">Hier wird der abstrakt denkende Programmierer aber einwenden, dass eine abstrakte
Logik nicht in eine Low-Level Funktion, wie [code:xsdmp:unquote] gewrapped werden sollte.</div><div xmlns:xr="http://www.tekturcms.de/2012/xr/common" xmlns:xlink="http://www.w3.org/1999/xlink" data-attribute-id="a935a64f-2ed6-4682-84cb-3243f9dcbb49d6e31" class="p pmarker tags" data-element="p" data-tektur-editor-id="a00dbead-fa49-456a-90c4-5f1d0f649445" contenteditable="true">Das stimmt - und mehr noch, die Maskierung mit [[code:xsdmp:unquote]] sollte auch noch in unsere 
Funktion gepackt werden. So dass der Code schliesslich so aussehen würde:</div><div class="pre"><div data-attribute-id="002e2e5d-bee4-462e-9502-ed93563ca577d6e31" data-attribute-xml_space="preserve" class="pre-content pmarker tags" data-element="pre" data-tektur-editor-id="60d6969e-83a3-4cc9-ae11-bb4e67ee2520" contenteditable="true">declare function common:render-response($json)
{
  xdmp:add-response-header("Pragma", "no-cache"),
  xdmp:add-response-header("Cache-Control", "no-cache"),
  xdmp:add-response-header("Expires", "0"),
  xdmp:set-response-content-type('text/json; charset=utf-8'),
  xdmp:unquote($json)
};

common:render-response(
    let $is-afternoon := xs:time(current-dateTime()) gt xs:time('12:00:00')
        return 
            if ($is-afternoon) then concat('{"greeting":"Good Afternoon! ',$name,'!"}') 
            else concat('{"greeting":"Good Morning! ',$name,'!"}')
)</div></div><div xmlns:xr="http://www.tekturcms.de/2012/xr/common" xmlns:xlink="http://www.w3.org/1999/xlink" data-attribute-id="0a519a5c-c908-4d55-a9e8-d8ad9a4e7a81d6e36" class="p pmarker tags" data-element="p" data-tektur-editor-id="8dd80a01-569d-4f9f-8a57-e60f58f523a2" contenteditable="true">Sicherlich lässt sich darüber streiten, ob nun der funktionale Ansatz besser lesbar ist als
der prozedurale ganz oben.</div><div xmlns:xr="http://www.tekturcms.de/2012/xr/common" xmlns:xlink="http://www.w3.org/1999/xlink" data-attribute-id="175752a8-d929-4081-83cf-c74b67da7d35d6e38" class="p pmarker tags" data-element="p" data-tektur-editor-id="bd32bf19-113c-4563-a30b-e628faf739f4" contenteditable="true">Ich denke jeder Programmierer hat hier seinen eigenen, individuellen
und bewährten Programmierstil entwickelt, den er auch beibehalten sollte.</div></div></div></div>