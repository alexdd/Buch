<div data-attribute-id="7f9615d0-3d92-4ec1-813b-db4b788b6efd" class="topic show_menu tags" data-element="topic" data-deletable="false" data-tektur-editor-id="fbe3b12e-8f84-453c-849a-56d2a2c7b3ef"><div class="gui-optional-elements-button" contenteditable="false"><div class="menu-icon" style="display:none">+</div></div><div data-attribute-id="86a66f53-eb4a-4cc0-b14c-12d5c2bb84bd" class="title pmarker tags" data-element="title" data-tektur-editor-id="73496cf0-ad38-4fc6-8920-4bd72e3f71bd" contenteditable="true">If..then..else Ausdrücke</div><div class="abstract optional show_menu tags" data-element="abstract" data-excluding="shortdesc" style="display:none" data-tektur-editor-id="1a477379-5aee-4dc8-a46e-2ab919520d97"><div class="gui-optional-elements-button" contenteditable="false"><div class="menu-icon" style="display:none">+</div></div><div class="placeholder text pmarker tags" data-element="p" data-tektur-editor-id="3df36f73-cac6-42f2-b416-e713152bc17b" contenteditable="true"></div></div><div data-attribute-id="c47ce675-c5d5-48bd-a4f9-73eb4cb6297c" class="body show_menu tags" data-element="body" data-deletable="false" data-tektur-editor-id="bf578a97-05ce-4109-9079-f060879ce5b2"><div class="gui-optional-elements-button" contenteditable="false"><div class="menu-icon" style="display:none">+</div></div><div class="section tektur-wrapper tags" data-element="section" data-tektur-editor-id="a7def783-5bb3-4ee4-ba28-3c9feb615441"><div xmlns:xr="http://www.tekturcms.de/2012/xr/common" xmlns:xlink="http://www.w3.org/1999/xlink" data-attribute-id="31bf12f5-ecec-4ada-965f-cb4e1539afc6" class="p pmarker tags" data-element="p" data-tektur-editor-id="132155c0-6d77-4103-b419-2fd5dc57e578" contenteditable="true">In nicht-funktionalen Programmiersprachen sind die Schlüsselwörter [[code:if]] und [[code:then]][[xe1:Programmierkonstrukte;xe2:Bedingte Anweisung - if..then..else]] dazu da, um dem Compiler oder Interpreter mitzuteilen, dass eine bedingte Anweisung ausgewertet werden soll.</div><div xmlns:xr="http://www.tekturcms.de/2012/xr/common" xmlns:xlink="http://www.w3.org/1999/xlink" data-attribute-id="c9ab5b21-d799-4bb6-a020-d7ab5750146ed6e12" class="p pmarker tags" data-element="p" data-tektur-editor-id="b7f31ba9-7197-4b0e-a618-474413f2cb29" contenteditable="true">Was für den Nicht-funktionalen Programmierer etwas befremdlich erscheint, ist der Umstand, dass in XQuery [[code:if..then]] als Ausdrücke ausgewertet werden.</div><div xmlns:xr="http://www.tekturcms.de/2012/xr/common" xmlns:xlink="http://www.w3.org/1999/xlink" data-attribute-id="e4d038c8-39fe-4f47-a81c-4a7d16a10c3ed6e17" class="p pmarker tags" data-element="p" data-tektur-editor-id="ff12d776-cca3-4ca4-83ed-17349b00b0aa" contenteditable="true">Das ist einerseits sehr praktisch, weil es richtig angewandt den Code verkürzt und damit das Wesentliche herausstellt, kann aber auch weiter zur allg. Verwirrung bzgl. des kryptischen XQuery Codes beitragen.</div></div><div data-element="section" class="section optional show_menu tags" data-tektur-editor-id="a59cf526-2427-4390-b3d4-7ea13dfb8ae2"><div class="gui-optional-elements-button" contenteditable="false"><div class="menu-icon" style="display:none">+</div></div><div data-attribute-id="b0df228c-1f72-4a12-9302-805fa0022b03d6e11" class="title pmarker tags" data-element="title" data-tektur-editor-id="6974e338-53ff-4faa-b779-5018c6536315" contenteditable="true">XQuery Server Application</div><div xmlns:xr="http://www.tekturcms.de/2012/xr/common" xmlns:xlink="http://www.w3.org/1999/xlink" data-attribute-id="2d0364b2-f8b1-47fa-996e-0f9ceba95e4fd6e13" class="p pmarker tags" data-element="p" data-tektur-editor-id="842b6b05-c161-4194-914c-85308e4f846e" contenteditable="true">Betrachten wir ein einfaches Beispiel: Wir generieren auf einer Marklogic-Webapp eine JSON Response. Da wir diesen Mechanismus an mehreren Stellen im Code einsetzen, empfiehlt es sich das Rendern des Headers in eine Funktion auszulagern.</div><div class="pre"><div data-attribute-id="98528166-d5d0-44f8-a9a5-6d63fa4ab37fd6e15" data-attribute-xml_space="preserve" class="pre-content pmarker tags" data-element="pre" data-tektur-editor-id="920df3c6-69bc-4009-ba34-6a43158c7d5a" contenteditable="true">declare function common:wrap-response($json)
{
  xdmp:add-response-header("Pragma", "no-cache"),
  xdmp:add-response-header("Cache-Control", "no-cache"),
  xdmp:add-response-header("Expires", "0"),
  xdmp:set-response-content-type('text/json; charset=utf-8'),
  $json
};</div></div><div xmlns:xr="http://www.tekturcms.de/2012/xr/common" xmlns:xlink="http://www.w3.org/1999/xlink" data-attribute-id="9c2999c6-968d-4719-9036-fd0664b5bd57d6e19" class="p pmarker tags" data-element="p" data-tektur-editor-id="75ae8c91-6701-44a5-ad16-991925de23f0" contenteditable="true">In unserem Request-Handler wird je nach Auswertung einer Variablen eine 
bedingte Anweisung ausgeführt, diese sieht bspw. so aus:</div><div class="pre"><div data-attribute-id="f9132916-86e1-4103-8c0c-904f95db023dd6e19" data-attribute-xml_space="preserve" class="pre-content pmarker tags" data-element="pre" data-tektur-editor-id="3cb5b1e3-9f5f-49f7-b5bb-c5d6cd045dd2" contenteditable="true">let $name := xdmp:get-request-field('name'),
    $is-afternoon := xs:time(current-dateTime()) gt xs:time('12:00:00')
return 
  if ($is-afternoon) then 
   common:wrap-response(xdmp:unquote(concat('{"greeting":"Good Afternoon! ',$name,'!"}')))
  else
   common:wrap-response(xdmp:unquote(concat('{"greeting":"Good Morning! ',$name,'!"}')))</div></div><div xmlns:xr="http://www.tekturcms.de/2012/xr/common" xmlns:xlink="http://www.w3.org/1999/xlink" data-attribute-id="7795845c-ea88-42f8-8adf-ab4d0b5404fcd6e23" class="p pmarker tags" data-element="p" data-tektur-editor-id="cbaeafbb-08c1-4d38-87a6-a0940c7a654e" contenteditable="true">Als prozeduraler Programmierer wäre ich mit diesem Switch voll und ganz zufrieden, 
der funktionale Programmier erkennt abaer sofort einen Optimierungsbedarf.</div><div xmlns:xr="http://www.tekturcms.de/2012/xr/common" xmlns:xlink="http://www.w3.org/1999/xlink" data-attribute-id="a553de2e-d73c-4a97-a1b1-5283220ffef3d6e25" class="p pmarker tags" data-element="p" data-tektur-editor-id="bd46f204-5cb2-4c8a-b302-a58b177033ee" contenteditable="true">Da es sich bei der bedingten Anweisung auch um einen Ausdruck handelt, der [[code:true}} oder [[code:false}} zurückgibt, können wir die gleichen Funktionsaufrufe herausziehen:</div><div class="pre"><div data-attribute-id="c961c8b0-bde6-4516-9c1c-a0c803b1324ed6e25" data-attribute-xml_space="preserve" class="pre-content pmarker tags" data-element="pre" data-tektur-editor-id="a6a91a81-0edc-446b-970d-47d8fe01395f" contenteditable="true">ommon:wrap-response(xdmp:unquote(
    let $is-afternoon := xs:time(current-dateTime()) gt xs:time('12:00:00')
        return 
            if ($is-afternoon) then concat('{"greeting":"Good Afternoon! ',$name,'!"}') 
            else concat('{"greeting":"Good Morning! ',$name,'!"}')
)</div></div><div xmlns:xr="http://www.tekturcms.de/2012/xr/common" xmlns:xlink="http://www.w3.org/1999/xlink" data-attribute-id="c1d6576a-56e3-4dda-bc18-342e7e458553d6e29" class="p pmarker tags" data-element="p" data-tektur-editor-id="1483e508-3aeb-4284-9805-cd9bd5e0ebf8" contenteditable="true">Hier wird der abstrakt denkende Programmierer aber einwenden, dass eine abstrakte
Logik nicht in eine Low-Level Funktion, wie [code:xsdmp:unquote] gewrapped werden sollte.</div><div xmlns:xr="http://www.tekturcms.de/2012/xr/common" xmlns:xlink="http://www.w3.org/1999/xlink" data-attribute-id="a935a64f-2ed6-4682-84cb-3243f9dcbb49d6e31" class="p pmarker tags" data-element="p" data-tektur-editor-id="c25ee451-319b-49e1-af6d-4bfcd740918d" contenteditable="true">Das stimmt - und mehr noch, die Maskierung mit [[code:xsdmp:unquote]] sollte auch noch in unsere 
Funktion gepackt werden. So dass der Code schliesslich so aussehen würde:</div><div class="pre"><div data-attribute-id="c08c196d-1175-4923-a068-b7053b0e6becd6e31" data-attribute-xml_space="preserve" class="pre-content pmarker tags" data-element="pre" data-tektur-editor-id="c508a602-913b-4e89-8636-5d9327319cae" contenteditable="true">declare function common:render-response($json)
{
  xdmp:add-response-header("Pragma", "no-cache"),
  xdmp:add-response-header("Cache-Control", "no-cache"),
  xdmp:add-response-header("Expires", "0"),
  xdmp:set-response-content-type('text/json; charset=utf-8'),
  xdmp:unquote($json)
};

common:render-response(
    let $is-afternoon := xs:time(current-dateTime()) gt xs:time('12:00:00')
        return 
            if ($is-afternoon) then concat('{"greeting":"Good Afternoon! ',$name,'!"}') 
            else concat('{"greeting":"Good Morning! ',$name,'!"}')
)</div></div><div xmlns:xr="http://www.tekturcms.de/2012/xr/common" xmlns:xlink="http://www.w3.org/1999/xlink" data-attribute-id="0a519a5c-c908-4d55-a9e8-d8ad9a4e7a81d6e36" class="p pmarker tags" data-element="p" data-tektur-editor-id="92cfbbd7-4c09-4ca0-8e65-338fd2c623fd" contenteditable="true">Sicherlich lässt sich darüber streiten, ob nun der funktionale Ansatz besser lesbar ist als
der prozedurale ganz oben.</div><div xmlns:xr="http://www.tekturcms.de/2012/xr/common" xmlns:xlink="http://www.w3.org/1999/xlink" data-attribute-id="175752a8-d929-4081-83cf-c74b67da7d35d6e38" class="p pmarker tags" data-element="p" data-tektur-editor-id="9515dc0f-8015-41db-a0b2-82a73f66d71c" contenteditable="true">Ich denke jeder Programmierer hat hier seinen eigenen, individuellen
und bewährten Programmierstil entwickelt, den er auch beibehalten sollte.</div></div></div></div>