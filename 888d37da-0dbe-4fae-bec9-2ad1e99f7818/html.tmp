<div data-attribute-id="86c96e00-9a1f-4187-beba-e5d9bd3a938b" class="topic show_menu tags" data-element="topic" data-deletable="false" data-tektur-editor-id="b8dcb11e-f6f1-47f4-bcbc-4b132d41fd3f"><div class="gui-optional-elements-button" contenteditable="false"><div class="menu-icon" style="display:none">+</div></div><div data-attribute-id="d97b76dd-7b2b-48e3-9b9e-53a4197d41f8" class="title pmarker tags" data-element="title" data-tektur-editor-id="51c99437-8a8b-44d6-848d-9a1db66eb219" contenteditable="true">Vererbung </div><div class="abstract optional show_menu tags" data-element="abstract" data-excluding="shortdesc" style="display:none" data-tektur-editor-id="275de0a9-c974-4b96-a74d-ecf202fb2946"><div class="gui-optional-elements-button" contenteditable="false"><div class="menu-icon" style="display:none">+</div></div><div class="placeholder text pmarker tags" data-element="p" data-tektur-editor-id="9977dc94-0fa7-4982-a175-ed34d9fcd49b" contenteditable="true"></div></div><div data-attribute-id="21ad1c11-47f6-4a53-ac2e-6094cbbd1be6" class="body show_menu tags" data-element="body" data-deletable="false" data-tektur-editor-id="f44ccdfa-d343-41f4-9c19-86f04606749d"><div class="gui-optional-elements-button" contenteditable="false"><div class="menu-icon" style="display:none">+</div></div><div class="section tektur-wrapper tags" data-element="section" data-tektur-editor-id="7b5b91f2-f5f5-4a54-a9b4-dd16bcdd47e8"><div xmlns:xr="http://www.tekturcms.de/2012/xr/common" xmlns:xlink="http://www.w3.org/1999/xlink" data-attribute-id="9f3c9490-6544-4061-9f73-b31a0655f3fc" class="p pmarker tags" data-element="p" data-tektur-editor-id="52133a70-6f78-4b20-bea5-ea35ca542df0" contenteditable="true">Mit XSLT[[xe1:Konzepte;xe2:Vererbung]] kann man Konstrukte nachbilden, so wie sie in anderen Programmiersprachen auch vorhanden sind. Bspw. die Vererbung. Dabei wird in einer Spezialisierung eine schon bereits getätigte Implementierung übernommen und erweitert oder eingeschränkt.</div><div xmlns:xr="http://www.tekturcms.de/2012/xr/common" xmlns:xlink="http://www.w3.org/1999/xlink" data-attribute-id="55d7fd52-cfb0-4630-a202-8a4997fdc6d5d6e6" class="p pmarker tags" data-element="p" data-tektur-editor-id="1472f555-34a3-4c0a-8643-97223cd8abde" contenteditable="true">Der Vorteil dabei ist, dass man nicht alles nochmal neu schreiben muss. Das verkleinert die Redundanz, führt zu einer besseren Wartbarkeit und einer geringeren Fehleranfälligkeit.</div></div><div data-element="section" class="section optional show_menu tags" data-tektur-editor-id="14da825a-9af8-42a4-a6a9-e24c0036cc3b"><div class="gui-optional-elements-button" contenteditable="false"><div class="menu-icon" style="display:none">+</div></div><div data-attribute-id="3e8c9912-e49a-4cf3-8836-4c6d59415fcdd6e9" class="title pmarker tags" data-element="title" data-tektur-editor-id="ede4eb99-335f-4e70-a949-d2f6db00fdb3" contenteditable="true">Beispiel: Parameterisierung</div><div xmlns:xr="http://www.tekturcms.de/2012/xr/common" xmlns:xlink="http://www.w3.org/1999/xlink" data-attribute-id="87a46d3c-3a53-49d8-81af-0b186522ab04d6e11" class="p pmarker tags" data-element="p" data-tektur-editor-id="1782b37b-6e0c-4744-96a4-a535eb1c99e7" contenteditable="true">Gewöhnlich implementiert man ein Stylsheet für ein bestimmtes Ausgabeformat und eine Produktvariante. Schrittweise werden dann weitere Varianten und Formate hinzugefügt.</div><div xmlns:xr="http://www.tekturcms.de/2012/xr/common" xmlns:xlink="http://www.w3.org/1999/xlink" data-attribute-id="2c5936d8-c14a-48c6-8783-22cb447e158ad6e13" class="p pmarker tags" data-element="p" data-tektur-editor-id="eab2f5de-e636-44b7-a67a-aa574cb07c47" contenteditable="true">Am komfortabelsten hat man es natürlich, wenn zu Beginn der Implementierung eine vollständige Spezifikation vorliegt... Das ist aber natürlich eher selten der Fall.</div><div xmlns:xr="http://www.tekturcms.de/2012/xr/common" xmlns:xlink="http://www.w3.org/1999/xlink" data-attribute-id="e49285e4-0d9b-4cb5-88fa-3c0cce5f8ca7d6e13" class="p pmarker tags" data-element="p" data-tektur-editor-id="50735573-6f6f-438e-afd4-4ebc00d045b8" contenteditable="true">Aus diesem Grund ist es wichtig, sich eine gute Strategie zu überlegen, damit die Architektur nicht in Spagetthi-Code auswartet.</div><div xmlns:xr="http://www.tekturcms.de/2012/xr/common" xmlns:xlink="http://www.w3.org/1999/xlink" data-attribute-id="fd634ecc-535d-4768-bc6f-eb4e29d0f513d6e17" class="p pmarker tags" data-element="p" data-tektur-editor-id="b2500cc8-359c-436c-9042-b51a08471656" contenteditable="true">Eine gute Option wäre, die XSLT Import Präzedenz auszunutzen, vgl. Kapitel <span class="link tags" data-element="link" data-tektur-editor-id="200d932e-be64-4c4e-ba6a-ab077288fcba" href="db988919-f71e-437e-b699-b6fdd2a32cb9" data-type="none">Eindeutigkeit der Regelbasis</span> .</div><div xmlns:xr="http://www.tekturcms.de/2012/xr/common" xmlns:xlink="http://www.w3.org/1999/xlink" data-attribute-id="c22ab5e0-6336-4c9b-8dff-af1a3bfd84a9d6e22" class="p pmarker tags" data-element="p" data-tektur-editor-id="a0b2790d-cd0e-4e6e-b11d-39d20c8fc655" contenteditable="true">Angenommen es geht darum zu einem späteren Zeitpunkt weitere Parameter einzuführen. Ein Switch, wie der folgende, müsste dann an mehreren Stellen im Code aktualisiert werden.</div><div class="pre"><div data-attribute-id="ea45ea5a-efb4-4250-807f-f502420c8afad6e24" data-attribute-xml_space="preserve" class="pre-content pmarker tags" data-element="pre" data-tektur-editor-id="e8b0846e-5114-48af-bc48-3416ac5647ab" contenteditable="true">&#x3C;xsl:choose&#x3E;
    &#x3C;xsl:when test="$myParameter='this_option'"&#x3E;
        &#x3C;!-- do this --&#x3E;
    &#x3C;/xsl:when&#x3E;
    &#x3C;xsl:when test="$myParameter='that_option'"&#x3E;
        &#x3C;!-- do that --&#x3E;
    &#x3C;/xsl:when&#x3E;
        [...]
&#x3C;/xsl:choose&#x3E;</div></div><div xmlns:xr="http://www.tekturcms.de/2012/xr/common" xmlns:xlink="http://www.w3.org/1999/xlink" data-attribute-id="62f5f7b0-1fe2-41c7-a495-77e19a1fd871d6e24" class="p pmarker tags" data-element="p" data-tektur-editor-id="1fbbb109-d1e9-4521-9670-9e1a36fc6d4e" contenteditable="true">Besser ist es, wenn man ein Core-Stylesheet pflegt, das für ein Format und eine Produktvariante[[xe1:Format- und Produktvarianten]] gut ausgetestet ist. Dieses Core-Stylesheet wird dann einfach für eine neue Variante importiert und relevante Teile werden für die neue "Spezialisierung"[[xe1:Konzepte;xe2:Generalisierung und Spezialisierung]] überschrieben. Beispielsweise könnte eine Regel zum Setzen des Headers auf jeder Seite so implementiert sein:</div><div class="pre"><div data-attribute-id="41132a24-444f-47fd-a6bf-12208c24d664d6e28" data-attribute-xml_space="preserve" class="pre-content pmarker tags" data-element="pre" data-tektur-editor-id="80bd9398-4b7d-405a-b4b0-99a6af85ff20" contenteditable="true">&#x3C;xsl:template name="render-header"&#x3E;
    &#x3C;!-- print logo on the left side spanning two rows--&#x3E;
    &#x3C;!-- print some metadata right side first row --&#x3E;
    &#x3C;!-- print a running header right side second row --&#x3E;
&#x3C;/xsl:template&#x3E;</div></div><div xmlns:xr="http://www.tekturcms.de/2012/xr/common" xmlns:xlink="http://www.w3.org/1999/xlink" data-attribute-id="a25fd496-3d0f-40d0-899b-8eeb8efa4a05d6e28" class="p pmarker tags" data-element="p" data-tektur-editor-id="65e51a6c-af88-42fe-9371-97cdb9b99ec7" contenteditable="true">Will man in einem neuen Format, bspw. A5, diese Logik austauschen und nur eine Zeile drucken, z.B. weil man nicht so viel Platz hat, so würde in einem "abgeleiteten" Stylesheet einfach die Regel noch einmal implementiert. </div><div class="pre"><div data-attribute-id="886cb45b-8f37-4d32-81e1-1f668293ef06d6e32" data-attribute-xml_space="preserve" class="pre-content pmarker tags" data-element="pre" data-tektur-editor-id="eef8e619-c5ff-4e00-9712-ebf84379ca21" contenteditable="true">&#x3C;xsl:choose&#x3E;
&#x3C;xsl:template name="render-header"&#x3E;
    &#x3C;!-- print a running header on left side --&#x3E;
    &#x3C;!-- print logo on right side --&#x3E;
&#x3C;/xsl:template&#x3E;</div></div><div xmlns:xr="http://www.tekturcms.de/2012/xr/common" xmlns:xlink="http://www.w3.org/1999/xlink" data-attribute-id="93a58f22-f501-44d1-bcdd-2d15ff8634b1d6e32" class="p pmarker tags" data-element="p" data-tektur-editor-id="03979e62-cdd1-464c-9ce2-6e0414ad782b" contenteditable="true">Dieses Template hat nun Vorrang und wird zur Auswertung herangezogen, mit der Konsequenz, dass der Header nur einzeilig gedruckt wird. Das schöne an diesen "Named-Templates"[[xe1:Konzepte;xe2:Named Template]] ist auch, dass man sie innerhalb von Variablen verwenden kann:</div><div class="pre"><div data-attribute-id="d718236a-18b9-4f86-ae6a-98d0b480ac67d6e37" data-attribute-xml_space="preserve" class="pre-content pmarker tags" data-element="pre" data-tektur-editor-id="3ae603bc-f2b3-47c9-9fd3-14de3e78b6b9" contenteditable="true">&#x3C;xsl:variable name="margin-width"&#x3E;
    &#x3C;xsl:call-template name="get-margin-width"/&#x3E;
&#x3C;/xsl:variable&#x3E;</div></div><div xmlns:xr="http://www.tekturcms.de/2012/xr/common" xmlns:xlink="http://www.w3.org/1999/xlink" data-attribute-id="dcdc2784-bb46-400d-975b-16cf6746a77cd6e37" class="p pmarker tags" data-element="p" data-tektur-editor-id="20429e2b-5cde-40e9-a473-1154dc3553ef" contenteditable="true">Das Template "get-margin-width" kann in einem "Sub"-Stylesheet überschrieben werden ohne dass die Variablen-Zugriffe im Core-Stylesheet angepasst werden müssten. Eine Zuweisung, wie:</div><div class="pre"><div data-attribute-id="a3ca3a8c-d72e-44b9-9d54-fde044f3ad25d6e41" data-attribute-xml_space="preserve" class="pre-content pmarker tags" data-element="pre" data-tektur-editor-id="c8fca8aa-ae16-4ad6-8a97-d1752df833ac" contenteditable="true">width="{$margin-width}"</div></div><div xmlns:xr="http://www.tekturcms.de/2012/xr/common" xmlns:xlink="http://www.w3.org/1999/xlink" data-attribute-id="699bae96-6c18-45c8-a517-4d20e0232f1cd6e43" class="p pmarker tags" data-element="p" data-tektur-editor-id="58c85695-bbbe-4248-8c6d-b3f67072b818" contenteditable="true">müsste nirgendwo im Code nochmal angefasst werden.</div></div></div></div>