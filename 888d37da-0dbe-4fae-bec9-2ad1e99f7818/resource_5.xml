<?xml version="1.0" encoding="UTF-8"?><topic id="86c96e00-9a1f-4187-beba-e5d9bd3a938b"><title id="d97b76dd-7b2b-48e3-9b9e-53a4197d41f8">Vererbung </title><body id="21ad1c11-47f6-4a53-ac2e-6094cbbd1be6"><p id="9f3c9490-6544-4061-9f73-b31a0655f3fc">Mit XSLT[[xe1:Konzepte;xe2:Vererbung]] kann man Konstrukte nachbilden, so wie sie in anderen Programmiersprachen auch vorhanden sind. Bspw. die Vererbung. Dabei wird in einer Spezialisierung eine schon bereits getätigte Implementierung übernommen und erweitert oder eingeschränkt.</p><p id="55d7fd52-cfb0-4630-a202-8a4997fdc6d5d6e6">Der Vorteil dabei ist, dass man nicht alles nochmal neu schreiben muss. Das verkleinert die Redundanz, führt zu einer besseren Wartbarkeit und einer geringeren Fehleranfälligkeit.</p><section id="f4a0686e-286a-4391-ac4f-946f6b74a8b8d6e8"><title id="3e8c9912-e49a-4cf3-8836-4c6d59415fcdd6e9">Beispiel: Parameterisierung</title><p id="87a46d3c-3a53-49d8-81af-0b186522ab04d6e11">Gewöhnlich implementiert man ein Stylsheet für ein bestimmtes Ausgabeformat und eine Produktvariante. Schrittweise werden dann weitere Varianten und Formate hinzugefügt.</p><p id="2c5936d8-c14a-48c6-8783-22cb447e158ad6e13">Am komfortabelsten hat man es natürlich, wenn zu Beginn der Implementierung eine vollständige Spezifikation vorliegt... Das ist aber natürlich eher selten der Fall.</p><p id="e49285e4-0d9b-4cb5-88fa-3c0cce5f8ca7d6e13">Aus diesem Grund ist es wichtig, sich eine gute Strategie zu überlegen, damit die Architektur nicht in Spagetthi-Code auswartet.</p><p id="fd634ecc-535d-4768-bc6f-eb4e29d0f513d6e17">Eine gute Option wäre, die XSLT Import Präzedenz auszunutzen, vgl. Kapitel <xref href="db988919-f71e-437e-b699-b6fdd2a32cb9" id="6900420f-7f27-4782-bab3-9459d95de662" type="none">Eindeutigkeit der Regelbasis</xref>.</p><p id="c22ab5e0-6336-4c9b-8dff-af1a3bfd84a9d6e22">Angenommen es geht darum zu einem späteren Zeitpunkt weitere Parameter einzuführen. Ein Switch, wie der folgende, müsste dann an mehreren Stellen im Code aktualisiert werden.</p><pre id="b98dc52b-a436-48f3-9a96-1d0f9f3ad427d6e24" xml:space="preserve">&lt;xsl:choose&gt;
    &lt;xsl:when test="$myParameter='this_option'"&gt;
        &lt;!-- do this --&gt;
    &lt;/xsl:when&gt;
    &lt;xsl:when test="$myParameter='that_option'"&gt;
        &lt;!-- do that --&gt;
    &lt;/xsl:when&gt;
        [...]
&lt;/xsl:choose&gt;</pre><p id="62f5f7b0-1fe2-41c7-a495-77e19a1fd871d6e24">Besser ist es, wenn man ein Core-Stylesheet pflegt, das für ein Format und eine Produktvariante[[xe1:Format- und Produktvarianten]] gut ausgetestet ist. Dieses Core-Stylesheet wird dann einfach für eine neue Variante importiert und relevante Teile werden für die neue "Spezialisierung"[[xe1:Konzepte;xe2:Generalisierung und Spezialisierung]] überschrieben. Beispielsweise könnte eine Regel zum Setzen des Headers auf jeder Seite so implementiert sein:</p><pre id="6d76b555-949a-4799-8e2c-561a0e470408d6e28" xml:space="preserve">&lt;xsl:template name="render-header"&gt;
    &lt;!-- print logo on the left side spanning two rows--&gt;
    &lt;!-- print some metadata right side first row --&gt;
    &lt;!-- print a running header right side second row --&gt;
&lt;/xsl:template&gt;</pre><p id="a25fd496-3d0f-40d0-899b-8eeb8efa4a05d6e28">Will man in einem neuen Format, bspw. A5, diese Logik austauschen und nur eine Zeile drucken, z.B. weil man nicht so viel Platz hat, so würde in einem "abgeleiteten" Stylesheet einfach die Regel noch einmal implementiert. </p><pre id="90bce868-6480-4865-bcf9-395e4ef6da0fd6e32" xml:space="preserve">&lt;xsl:choose&gt;
&lt;xsl:template name="render-header"&gt;
    &lt;!-- print a running header on left side --&gt;
    &lt;!-- print logo on right side --&gt;
&lt;/xsl:template&gt;</pre><p id="93a58f22-f501-44d1-bcdd-2d15ff8634b1d6e32">Dieses Template hat nun Vorrang und wird zur Auswertung herangezogen, mit der Konsequenz, dass der Header nur einzeilig gedruckt wird. Das schöne an diesen "Named-Templates"[[xe1:Konzepte;xe2:Named Template]] ist auch, dass man sie innerhalb von Variablen verwenden kann:</p><pre id="d5254157-6553-4803-9d85-0b54dc5f4791d6e37" xml:space="preserve">&lt;xsl:variable name="margin-width"&gt;
    &lt;xsl:call-template name="get-margin-width"/&gt;
&lt;/xsl:variable&gt;</pre><p id="dcdc2784-bb46-400d-975b-16cf6746a77cd6e37">Das Template "get-margin-width" kann in einem "Sub"-Stylesheet überschrieben werden ohne dass die Variablen-Zugriffe im Core-Stylesheet angepasst werden müssten. Eine Zuweisung, wie:</p><pre id="920ff982-cc09-44c8-8a75-f6692ae070afd6e41" xml:space="preserve">width="{$margin-width}"</pre><p id="699bae96-6c18-45c8-a517-4d20e0232f1cd6e43">müsste nirgendwo im Code nochmal angefasst werden.</p></section></body></topic>