<div data-attribute-id="821f8271-e9a1-43e8-ba9a-b1e8aa0ce4f4" class="topic show_menu tags" data-element="topic" data-deletable="false" data-tektur-editor-id="400bc2a8-f02a-4b9c-96d4-0465a7903312"><div class="gui-optional-elements-button" contenteditable="false"><div class="menu-icon" style="display:none">+</div></div><div data-attribute-id="9b1e7086-25cc-4bdf-ba77-6adfb503603b" class="title pmarker tags" data-element="title" data-tektur-editor-id="d92ffa7d-e50d-4407-b3b2-b1c3a230563e" contenteditable="true">Erste Schritte mit Xspec</div><div class="abstract optional show_menu tags" data-element="abstract" data-excluding="shortdesc" style="display:none" data-tektur-editor-id="21deb170-f546-4079-83fd-0935b8122706"><div class="gui-optional-elements-button" contenteditable="false"><div class="menu-icon" style="display:none">+</div></div><div class="placeholder text pmarker tags" data-element="p" data-tektur-editor-id="7981474b-d2ff-4bdf-96d7-e99a9a75a7e7" contenteditable="true"></div></div><div data-attribute-id="9036318d-3693-4e5c-be19-8a62e8748b03" class="body show_menu tags" data-element="body" data-deletable="false" data-tektur-editor-id="689d7a0d-8950-4c3a-b501-4aadef9ca430"><div class="gui-optional-elements-button" contenteditable="false"><div class="menu-icon" style="display:none">+</div></div><div class="section tektur-wrapper tags" data-element="section" data-tektur-editor-id="4aba5704-46e5-42df-ba5f-8897a6641778"><div xmlns:xr="http://www.tekturcms.de/2012/xr/common" xmlns:xlink="http://www.w3.org/1999/xlink" data-attribute-id="eef21ef4-793e-4fef-9f1e-a22ecf24b64c" class="p pmarker tags" data-element="p" data-tektur-editor-id="39af238e-3f5c-4ba7-84e0-7e65614a96ae" contenteditable="true">XSpec[[xe1:Tools;xe2:XSpec]] ist ein <span data-attribute-id="f7bc6aa2-0978-410e-b4cc-fd74b8d2c0c1d6e6" class="b tags" data-element="b" data-tektur-editor-id="879cebce-efe4-40c2-8b40-eb8b68add2be">Test-Framework</span>[[fn:https://github.com/xspec]][[xe1:Test-Framework]] für XSLT, XQuery und Schematron. 
Um beispielsweise komplexe Schematron Regeln zu testen, hinterlegt man in einem <span data-attribute-id="f6d68885-0ad1-420b-82ea-92bd5889e0bcd6e9" class="b tags" data-element="b" data-tektur-editor-id="c293bfe9-59cc-45eb-a14d-bb8db4025b19">Test-Szenario</span> 
Erwartungswerte für positive und negative Testfälle in Form von XML Schnippseln.</div><div class="pre"><div data-attribute-id="7083d8b1-94f0-41db-bd28-44f8f878a13fd6e12" data-attribute-xml_space="preserve" class="pre-content pmarker tags" data-element="pre" data-tektur-editor-id="d3ce1acb-cf55-4d55-85a3-1cd337374a09" contenteditable="true">&#x3C;test-szenario&#x3E;
  &#x3C;testfall&#x3E;
    &#x3C;personen&#x3E;
      &#x3C;person&#x3E;
        &#x3C;vorname&#x3E;Horst&#x3C;/vorname&#x3E;
        &#x3C;<span data-attribute-id="e87374ec-bf2c-4f03-9367-42d12d889774d6e14" class="b tags" data-element="b" data-tektur-editor-id="bddd73f6-a79f-4c3e-bc24-3657e516f86e">nachname</span>&#x3E;Schlämmer&#x3C;/<span data-attribute-id="cfbe22ab-cf86-48fe-8717-0862a92b60aed6e17" class="b tags" data-element="b" data-tektur-editor-id="60614070-616f-4523-8a7e-a28b600b9ca0">nachname</span>&#x3E;
        &#x3C;gewicht&#x3E;100&#x3C;/gewicht&#x3E;
      &#x3C;/person&#x3E;
      &#x3C;person&#x3E;
        &#x3C;vorname&#x3E;Gundula&#x3C;/vorname&#x3E;
        &#x3C;<span data-attribute-id="fe6fa3a1-3ec7-466f-9580-adb0c9a0108cd6e20" class="b tags" data-element="b" data-tektur-editor-id="cf42ac71-4bdf-447d-b59a-afbf3a743b91">nachname</span>&#x3E;&#x3C;/<span data-attribute-id="9c67350d-fd59-42f5-88a6-5d22c0d6f244d6e23" class="b tags" data-element="b" data-tektur-editor-id="1567fcd5-eee8-403a-a89c-a668372a87f6">nachname</span>&#x3E;
        &#x3C;gewicht&#x3E;60&#x3C;/gewicht&#x3E;
      &#x3C;/person&#x3E;
    &#x3C;/personen&#x3E;
  &#x3C;/testfall&#x3E;
&#x3C;/test-szenario&#x3E;</div></div><div xmlns:xr="http://www.tekturcms.de/2012/xr/common" xmlns:xlink="http://www.w3.org/1999/xlink" data-attribute-id="a495ec01-4794-4e28-b47f-0313ab934100d6e26" class="p pmarker tags" data-element="p" data-tektur-editor-id="ee3f98ae-ee66-4d21-b126-6fc9f690fc93" contenteditable="true">in einer XSpec Datei *. werden <span data-attribute-id="31a39752-2463-4c05-bbc6-043c7fa89e67d6e28" class="b tags" data-element="b" data-tektur-editor-id="9a02307d-04f3-449d-95e6-b3d6b772586b">Assert- und Not-Assert-Methoden</span> [[xe1:Assert- und Not-Assert]]deklariert:</div><div class="pre"><div data-attribute-id="a47b5a83-f246-4a37-b36a-c346f558078ed6e31" data-attribute-xml_space="preserve" class="pre-content pmarker tags" data-element="pre" data-tektur-editor-id="82883b88-fee3-4ccf-a686-905bc87f2da3" contenteditable="true">&#x3C;x:description xslt-version="2.0" xmlns:x="http://www.jenitennison.com/xslt/xspec" 
               schematron="test.sch"&#x3E;
  &#x3C;x:scenario label="ALL"&#x3E;
    &#x3C;x:context href="test.xml"/&#x3E;
    &#x3C;x:expect-not-assert id="person-nachname-rule" location="//person[1]/<span data-attribute-id="f1da55c6-96eb-44b5-ad06-0677145589f9d6e33" class="b tags" data-element="b" data-tektur-editor-id="91f90a39-7c93-4bb7-b1a1-907e4338c718">nachname</span>"/&#x3E;
    &#x3C;x:expect-assert id="person-nachname-rule" location="//person[2]/<span data-attribute-id="0cf62582-9a6c-4163-b6b1-5c28aa9fe998d6e36" class="b tags" data-element="b" data-tektur-editor-id="2c8e156d-c9e3-4cfb-bb9e-70b2f7687bed">nachname</span>"/&#x3E;
  &#x3C;/x:scenario&#x3E;
&#x3C;/x:description&#x3E;</div></div><div xmlns:xr="http://www.tekturcms.de/2012/xr/common" xmlns:xlink="http://www.w3.org/1999/xlink" data-attribute-id="9aac4097-bb50-44d5-8827-bd1775ce18fcd6e39" class="p pmarker tags" data-element="p" data-tektur-editor-id="315cd866-01a4-4273-869a-36521370faa1" contenteditable="true">Grds. bdeutet ein Assert, dass das Mapping zwischen tatsächlichem Wert und Erwartungswert des
Testfalls[[xe1:Testfall]] positiv erfüllt ist. Beim Not-Assert ist das Gegenteil der Fall. Im obigen Beispiel
reichen zwei Regeln, um den Testfall vollständig abzudecken.</div><div xmlns:xr="http://www.tekturcms.de/2012/xr/common" xmlns:xlink="http://www.w3.org/1999/xlink" data-attribute-id="350b086a-a78e-47cc-9a3e-4f8c596fadf4d6e41" class="p pmarker tags" data-element="p" data-tektur-editor-id="71454f6e-ea4f-4821-be2f-5deed83ca606" contenteditable="true">Wenn man Schematron[[xe1:Tools;xe2:Schematron]] Regeln mit Hilfe von XSpec testen will, dann muss man ein bisschen um 
die Ecke denken. Denn auch diese Regeln werden mittels Assert und Not-Assert modelliert.</div><div class="pre"><div data-attribute-id="c933a329-f6f7-4ee3-a5af-322751629bb9d6e43" data-attribute-xml_space="preserve" class="pre-content pmarker tags" data-element="pre" data-tektur-editor-id="0aa4e25c-d728-421e-8401-30c618b5eae3" contenteditable="true">&#x3C;sch:schema xmlns:sch="http://purl.oclc.org/dsdl/schematron" 
            xmlns:xsl="http://www.w3.org/1999/XSL/Transform" queryBinding="xslt2"&#x3E;
  &#x3C;sch:pattern id="main"&#x3E;
    &#x3C;sch:rule context="<span data-attribute-id="2ab3f43e-5f41-475a-82bf-df2c227b6756d6e45" class="b tags" data-element="b" data-tektur-editor-id="b2db47a4-6d12-4be4-9b2c-b8610b623e34">nachname</span>"&#x3E;
      &#x3C;sch:assert id="person-nachname-rule" role="error" test="normalize-space(.)"&#x3E;
        Der Nachname der Person mit ID: &#x3C;sch:value-of select="@id"/&#x3E; fehlt! 
      &#x3C;/sch:assert&#x3E;
    &#x3C;/sch:rule&#x3E;
  &#x3C;/sch:pattern&#x3E;
&#x3C;/sch:schema&#x3E;</div></div><div xmlns:xr="http://www.tekturcms.de/2012/xr/common" xmlns:xlink="http://www.w3.org/1999/xlink" data-attribute-id="5da4afab-3eda-4027-956a-1e72b6dd19b3d6e48" class="p pmarker tags" data-element="p" data-tektur-editor-id="b6e26780-0322-4174-af15-44b5cbb3efb4" contenteditable="true">In der Schematron-Regel wird zugesichert (Assert), dass jede Person einen Nachnamen hat.</div><div xmlns:xr="http://www.tekturcms.de/2012/xr/common" xmlns:xlink="http://www.w3.org/1999/xlink" data-attribute-id="6d2dba49-cecd-4315-8956-4beb19e4af08d6e50" class="p pmarker tags" data-element="p" data-tektur-editor-id="ad0ebacc-7835-4aa1-94ad-9782de97149f" contenteditable="true">Hat sie keinen Nachnamen so wird der Bericht zum Fehlerfall in die Schematron Ergebnisdatei
geschrieben. Diese Datei wertet nun Xspec aus.</div><div data-element="note" class="show_menu tags" data-tektur-editor-id="41ac9aec-b4f2-43a1-b017-44413f78d477"><div class="gui-optional-elements-button" contenteditable="false"><div class="menu-icon" style="display:none">+</div></div><div class="note"><div class="signal-word">NOTE</div><div class="hcontent"><div xmlns:xr="http://www.tekturcms.de/2012/xr/common" xmlns:xlink="http://www.w3.org/1999/xlink" data-attribute-id="611d787d-7b54-46dd-9548-158dd6db0bfcd6e53" class="p pmarker tags" data-element="p" data-tektur-editor-id="26ec53fa-0243-4ffd-b8f1-ff9a14ab77f7" contenteditable="true">Erscheint ein Fehler (= das Feld <span data-attribute-id="171bb098-8941-486f-b6e0-c577438c996dd6e55" class="b tags" data-element="b" data-tektur-editor-id="36f27d8c-4195-440f-b2ef-5667c13399ae">nachname</span> ist leer), so greift bei Xspec die Assert-Regel! Das ist die umgekehrte Logik zu den Schematron Regeln.</div></div></div></div><div xmlns:xr="http://www.tekturcms.de/2012/xr/common" xmlns:xlink="http://www.w3.org/1999/xlink" data-attribute-id="1ed9b5fd-88c2-4a6b-998b-6eac55854ec7d6e58" class="p pmarker tags" data-element="p" data-tektur-editor-id="7f283ad1-7da7-467b-b34b-b8a6eebf5325" contenteditable="true">Als Eselsbrücke kann man
ein Assert in der Xspec Datei gleichsetzen mit <span data-attribute-id="30100a12-de8b-4e03-a6ff-86361fb1e578d6e60" class="b tags" data-element="b" data-tektur-editor-id="0fedf29a-3caa-485a-a295-7b5ded92fb18">Appear</span> und ein Not-Assert mit
<span data-attribute-id="be31f20f-1e9b-4c0d-b42d-f12afa043917d6e63" class="b tags" data-element="b" data-tektur-editor-id="668c3bdc-7ed4-4748-91fb-a4723485422e">Not-Appear</span>. [[xe1:Tipps und Tricks;xe2:Appear- und Not-Appear]]</div><div xmlns:xr="http://www.tekturcms.de/2012/xr/common" xmlns:xlink="http://www.w3.org/1999/xlink" data-attribute-id="5f9a44b2-0d88-4bf3-81f2-d93a28301049d6e67" class="p pmarker tags" data-element="p" data-tektur-editor-id="6cd66639-e344-4f79-9ede-612edd26abc4" contenteditable="true">Ein Assert sichert also zu, dass sich ein Fehlerbericht in der
Schematron Ergebnisdatei zum Testfall befindet. Ein Not-Assert sichert zu, dass
sich kein Fehlerbericht befindet. </div><div xmlns:xr="http://www.tekturcms.de/2012/xr/common" xmlns:xlink="http://www.w3.org/1999/xlink" data-attribute-id="23ee0dc1-c910-43f7-a86b-442562947535d6e69" class="p pmarker tags" data-element="p" data-tektur-editor-id="07116465-714b-4186-947f-6e7d5262dc71" contenteditable="true"> Wie man sich leicht vorstellen kann, sind Assert-Regeln in diesem Fall leicht zu finden,
dazu muss man nur die Schematron Testregeln ins Leere zeigen lassen. Alles ist grün
und alles ist gut - dem Augenschein nach.</div></div></div></div>