<div data-attribute-id="821f8271-e9a1-43e8-ba9a-b1e8aa0ce4f4" class="topic show_menu tags" data-element="topic" data-deletable="false" data-tektur-editor-id="a44cfc48-2068-42e2-ac16-d8d6be9ab943"><div class="gui-optional-elements-button" contenteditable="false"><div class="menu-icon" style="display:none">+</div></div><div data-attribute-id="9b1e7086-25cc-4bdf-ba77-6adfb503603b" class="title pmarker tags" data-element="title" data-tektur-editor-id="b1aef8c4-ec4e-4e0c-b4f6-4d23f5d5d76b" contenteditable="true">Erste Schritte mit Xspec</div><div class="abstract optional show_menu tags" data-element="abstract" data-excluding="shortdesc" style="display:none" data-tektur-editor-id="c0dc31d3-244e-42c9-9eb3-eaa76e6f1fcc"><div class="gui-optional-elements-button" contenteditable="false"><div class="menu-icon" style="display:none">+</div></div><div class="placeholder text pmarker tags" data-element="p" data-tektur-editor-id="d7df8569-e5f2-46a5-8e8c-a525a98ac16f" contenteditable="true"></div></div><div data-attribute-id="9036318d-3693-4e5c-be19-8a62e8748b03" class="body show_menu tags" data-element="body" data-deletable="false" data-tektur-editor-id="913ac0a1-08ed-4363-b54a-3a9ede625944"><div class="gui-optional-elements-button" contenteditable="false"><div class="menu-icon" style="display:none">+</div></div><div class="section tektur-wrapper tags" data-element="section" data-tektur-editor-id="adf43e15-c344-4ef3-b9ca-9c3107aa346c"><div xmlns:xr="http://www.tekturcms.de/2012/xr/common" xmlns:xlink="http://www.w3.org/1999/xlink" data-attribute-id="eef21ef4-793e-4fef-9f1e-a22ecf24b64c" class="p pmarker tags" data-element="p" data-tektur-editor-id="c1ce5518-bde3-4863-8979-29091e3eeeb7" contenteditable="true">XSpec ist ein <span data-tektur-editor-id="ddf69248-541b-4cb9-945b-44ad172b0eac" data-element="b" class="b">Test-Framework</span>[[fn:https://github.com/xspec]] für XSLT, XQuery und Schematron. 
Um beispielsweise komplexe Schematron Regeln zu testen, hinterlegt man in einem <span data-tektur-editor-id="d188df0f-d0b2-449b-876e-73b7e16bb4ce" data-element="b" class="b">Test-Szenario</span> 
Erwartungswerte für positive und negative Testfälle in Form von XML Schnippseln.</div><div class="pre tags" data-tektur-editor-id="1e6e4866-e0ac-4d19-bd12-ef8ec554301f"><div class="pre-content pmarker show_menu tags" data-element="pre" contenteditable="true" data-tektur-editor-id="84e67c2a-0633-4a66-88c4-9ee617101240">&#x3C;test-szenario&#x3E;
  &#x3C;testfall&#x3E;
    &#x3C;personen&#x3E;
      &#x3C;person&#x3E;
        &#x3C;vorname&#x3E;Horst&#x3C;/vorname&#x3E;
        &#x3C;<span data-tektur-editor-id="25cd757d-7754-4b08-b236-5e362bffe2e9" data-element="b" class="b">nachname</span>&#x3E;Schlämmer&#x3C;/<span data-tektur-editor-id="15d46c56-014f-479d-9445-4f3735e5f21d" data-element="b" class="b">nachname</span>&#x3E;
        &#x3C;gewicht&#x3E;100&#x3C;/gewicht&#x3E;
      &#x3C;/person&#x3E;
      &#x3C;person&#x3E;
        &#x3C;vorname&#x3E;Gundula&#x3C;/vorname&#x3E;
        &#x3C;<span data-tektur-editor-id="ccbf7701-c32c-478c-a754-3aef1ded318a" data-element="b" class="b">nachname</span>&#x3E;&#x3C;/<span data-tektur-editor-id="5b9b7006-6e10-4d59-8643-cc02384f1ee7" data-element="b" class="b">nachname</span>&#x3E;
        &#x3C;gewicht&#x3E;60&#x3C;/gewicht&#x3E;
      &#x3C;/person&#x3E;
    &#x3C;/personen&#x3E;
  &#x3C;/testfall&#x3E;
&#x3C;/test-szenario&#x3E;</div></div><div class="p tags pmarker text" data-element="p" contenteditable="true" data-tektur-editor-id="edfa072a-e2d4-4867-ac77-18288e7963b1">in einer XSpec Datei *. werden <span data-tektur-editor-id="69db51fd-f9fe-4f37-8acf-d8c8e711b0dc" data-element="b" class="b">Assert- und Not-Assert-Methoden</span> deklariert:</div><div class="pre tags" data-tektur-editor-id="09d98b68-1b88-43ea-8d0d-554fb6138983"><div class="pre-content pmarker show_menu tags" data-element="pre" contenteditable="true" data-tektur-editor-id="5f699d88-8836-4871-a24b-6032653bc980">&#x3C;x:description xslt-version="2.0" xmlns:x="http://www.jenitennison.com/xslt/xspec" 
               schematron="test.sch"&#x3E;
  &#x3C;x:scenario label="ALL"&#x3E;
    &#x3C;x:context href="test.xml"/&#x3E;
    &#x3C;x:expect-not-assert id="person-nachname-rule" location="//person[1]/<span data-tektur-editor-id="675927fd-5230-4d4a-9d38-28abdd8b63c0" data-element="b" class="b">nachname</span>"/&#x3E;
    &#x3C;x:expect-assert id="person-nachname-rule" location="//person[2]/<span data-tektur-editor-id="d7871319-885b-4d68-a132-9e98b324fec4" data-element="b" class="b">nachname</span>"/&#x3E;
  &#x3C;/x:scenario&#x3E;
&#x3C;/x:description&#x3E;</div></div><div class="text pmarker tags" data-element="p" contenteditable="true" data-tektur-editor-id="16fdc5f0-c183-4f88-bdfc-b8f7203155da">Grds. bdeutet ein Assert, dass das Mapping zwischen tatsächlichem Wert und Erwartungswert des
Testfalls positiv erfüllt ist. Beim Not-Assert ist das Gegenteil der Fall. Im obigen Beispiel
reichen zwei Regeln, um den Testfall vollständig abzudecken.</div><div class="p tags pmarker" data-element="p" contenteditable="true" data-tektur-editor-id="4da827e2-0678-4c19-a4e7-1974f94aa51a">Wenn man Schematron Regeln mit Hilfe von XSpec testen will, dann muss man ein bisschen um 
die Ecke denken. Denn auch diese Regeln werden mittels Assert und Not-Assert modelliert.</div><div class="pre tags" data-tektur-editor-id="7d77663d-7e83-4e17-b4d1-977647925df7"><div class="pre-content pmarker show_menu tags" data-element="pre" contenteditable="true" data-tektur-editor-id="a1ac436a-926b-4361-8c9f-732856371463">&#x3C;sch:schema xmlns:sch="http://purl.oclc.org/dsdl/schematron" 
            xmlns:xsl="http://www.w3.org/1999/XSL/Transform" queryBinding="xslt2"&#x3E;
  &#x3C;sch:pattern id="main"&#x3E;
    &#x3C;sch:rule context="<span data-tektur-editor-id="5f6787d4-6623-4de2-8a20-afb7c0c3c023" data-element="b" class="b">nachname</span>"&#x3E;
      &#x3C;sch:assert id="person-nachname-rule" role="error" test="normalize-space(.)"&#x3E;
        Der Nachname der Person mit ID: &#x3C;sch:value-of select="@id"/&#x3E; fehlt! 
      &#x3C;/sch:assert&#x3E;
    &#x3C;/sch:rule&#x3E;
  &#x3C;/sch:pattern&#x3E;
&#x3C;/sch:schema&#x3E;</div></div><div class="text pmarker tags" data-element="p" contenteditable="true" data-tektur-editor-id="6104cbcc-c24d-4796-bd41-7c92f6c9a758">In der Schematron-Regel wird zugesichert (Assert), dass jede Person einen Nachnamen hat.</div><div class="p tags pmarker" data-element="p" contenteditable="true" data-tektur-editor-id="8a7e1a63-6b2a-4d71-8a3a-8a6a19b93b23">Hat sie keinen Nachnamen so wird der Bericht zum Fehlerfall in die Schematron Ergebnisdatei
geschrieben. Diese Datei wertet nun Xspec aus.</div><div data-element="note" style="" class="show_menu tags" data-tektur-editor-id="a722b17e-1e5c-4f01-ac4a-4223fd874954"><div class="gui-optional-elements-button" contenteditable="false"><div class="menu-icon" style="display:none">+</div></div><div class="Note" data-tektur-editor-id="ab3fd2ba-f894-4249-b285-ac281eebd734"><div class="signal-word" data-tektur-editor-id="d6216997-c82d-41a9-9c99-04c6a03f78f6">NOTE</div><div class="hcontent" data-tektur-editor-id="f447db7f-1290-4502-88f3-e88f3b17ff70"><div class="pmarker text tags" data-element="p" contenteditable="true" data-tektur-editor-id="2d6ddcc9-ac8e-4799-928a-6e7d404bf39d">Erscheint ein Fehler (= das Feld <span data-tektur-editor-id="4f9f94b4-ef3b-4b4c-88a0-6196c111d0a4" data-element="b" class="b">nachname</span> ist leer), so greift bei Xspec die Assert-Regel! Das ist die umgekehrte Logik zu den Schematron Regeln.</div></div></div></div><div class="p pmarker tags" data-element="p" contenteditable="true" data-tektur-editor-id="d6fef23a-a3c1-4593-9419-de93cd57a455">Als Eselsbrücke kann man
ein Assert in der Xspec Datei gleichsetzen mit <span data-tektur-editor-id="0bd8e7f1-91c0-4d9d-a3ac-77df5fdba759" data-element="b" class="b">Appear</span> und ein Not-Assert mit
<span data-tektur-editor-id="b1a6b08b-becd-439f-8236-bbe85645dbbd" data-element="b" class="b">Not-Appear</span>. </div><div class="p tags pmarker" data-element="p" contenteditable="true" data-tektur-editor-id="e7dc4797-d4d0-4e1b-91d2-67c9e08b15d7">Ein Assert sichert also zu, dass sich ein Fehlerbericht in der
Schematron Ergebnisdatei zum Testfall befindet. Ein Not-Assert sichert zu, dass
sich kein Fehlerbericht befindet. </div><div class="p tags pmarker" data-element="p" contenteditable="true" data-tektur-editor-id="3c1fa49c-1387-4fd7-a485-a1b8301a9f96"> Wie man sich leicht vorstellen kann, sind Assert-Regeln in diesem Fall leicht zu finden,
dazu muss man nur die Schematron Testregeln ins Leere zeigen lassen. Alles ist grün
und alles ist gut - dem Augenschein nach.</div></div></div></div>