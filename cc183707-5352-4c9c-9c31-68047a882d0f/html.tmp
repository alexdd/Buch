<div data-attribute-id="821f8271-e9a1-43e8-ba9a-b1e8aa0ce4f4" class="topic show_menu tags" data-element="topic" data-deletable="false" data-tektur-editor-id="d9fddeb6-4980-4d61-ad40-8b4c2c35b892"><div class="gui-optional-elements-button" contenteditable="false"><div class="menu-icon" style="display:none">+</div></div><div data-attribute-id="9b1e7086-25cc-4bdf-ba77-6adfb503603b" class="title pmarker tags" data-element="title" data-tektur-editor-id="d1720d46-93ba-4b3e-873c-f3e01b6459a9" contenteditable="true">Erste Schritte mit Xspec</div><div class="abstract optional show_menu tags" data-element="abstract" data-excluding="shortdesc" style="display:none" data-tektur-editor-id="abcd6fd9-675f-4c3f-9676-fecaa9e62618"><div class="gui-optional-elements-button" contenteditable="false"><div class="menu-icon" style="display:none">+</div></div><div class="placeholder text pmarker tags" data-element="p" data-tektur-editor-id="6bc1a2d0-3c96-4895-9630-2f0148f348fc" contenteditable="true"></div></div><div data-attribute-id="9036318d-3693-4e5c-be19-8a62e8748b03" class="body show_menu tags" data-element="body" data-deletable="false" data-tektur-editor-id="6c2e3cbc-948a-4db1-a2d5-d85bb8255a6a"><div class="gui-optional-elements-button" contenteditable="false"><div class="menu-icon" style="display:none">+</div></div><div class="section tektur-wrapper tags" data-element="section" data-tektur-editor-id="795558f0-57ec-43b7-9071-8ad38a44127a"><div xmlns:xr="http://www.tekturcms.de/2012/xr/common" xmlns:xlink="http://www.w3.org/1999/xlink" data-attribute-id="eef21ef4-793e-4fef-9f1e-a22ecf24b64c" class="p pmarker tags" data-element="p" data-tektur-editor-id="6b965d9f-10e7-4f61-8f62-a7cbaaf0d33f" contenteditable="true">XSpec[[xe1:Tools;xe2:XSpec]] ist ein <span data-attribute-id="f7bc6aa2-0978-410e-b4cc-fd74b8d2c0c1d6e6" class="b tags" data-element="b" data-tektur-editor-id="ca89fcc9-2cc4-4e59-bc71-ca8e734104b1">Test-Framework</span>[[fn:https://github.com/xspec*XSpec auf GitHub]][[xe1:Test-Framework]] für XSLT, XQuery und Schematron. 
Um beispielsweise komplexe Schematron Regeln zu testen, hinterlegt man in einem <span data-attribute-id="f6d68885-0ad1-420b-82ea-92bd5889e0bcd6e9" class="b tags" data-element="b" data-tektur-editor-id="9d98f18c-a319-4ff6-8c8b-b37383313ef8">Test-Szenario</span> 
Erwartungswerte für positive und negative Testfälle in Form von XML Schnippseln.</div><div class="pre"><div data-attribute-id="ef6a40ac-836d-411d-851f-a49bcaca2a35d6e12" data-attribute-xml_space="preserve" class="pre-content pmarker tags" data-element="pre" data-tektur-editor-id="2e0bbd1f-38b9-407a-9d99-e6a5b5325506" contenteditable="true">&#x3C;test-szenario&#x3E;
  &#x3C;testfall&#x3E;
    &#x3C;personen&#x3E;
      &#x3C;person&#x3E;
        &#x3C;vorname&#x3E;Horst&#x3C;/vorname&#x3E;
        &#x3C;<span data-attribute-id="e87374ec-bf2c-4f03-9367-42d12d889774d6e14" class="b tags" data-element="b" data-tektur-editor-id="953f2376-3502-4cbe-a3ac-2e5c4e27594f">nachname</span>&#x3E;Schlämmer&#x3C;/<span data-attribute-id="cfbe22ab-cf86-48fe-8717-0862a92b60aed6e17" class="b tags" data-element="b" data-tektur-editor-id="9a93c498-28fa-42ef-856b-ed0dfe823210">nachname</span>&#x3E;
        &#x3C;gewicht&#x3E;100&#x3C;/gewicht&#x3E;
      &#x3C;/person&#x3E;
      &#x3C;person&#x3E;
        &#x3C;vorname&#x3E;Gundula&#x3C;/vorname&#x3E;
        &#x3C;<span data-attribute-id="fe6fa3a1-3ec7-466f-9580-adb0c9a0108cd6e20" class="b tags" data-element="b" data-tektur-editor-id="2e48c37b-9d39-4a70-91b8-373107a94171">nachname</span>&#x3E;&#x3C;/<span data-attribute-id="9c67350d-fd59-42f5-88a6-5d22c0d6f244d6e23" class="b tags" data-element="b" data-tektur-editor-id="17f9c116-e42c-4d1b-8e82-8c51f80895ba">nachname</span>&#x3E;
        &#x3C;gewicht&#x3E;60&#x3C;/gewicht&#x3E;
      &#x3C;/person&#x3E;
    &#x3C;/personen&#x3E;
  &#x3C;/testfall&#x3E;
&#x3C;/test-szenario&#x3E;</div></div><div xmlns:xr="http://www.tekturcms.de/2012/xr/common" xmlns:xlink="http://www.w3.org/1999/xlink" data-attribute-id="a495ec01-4794-4e28-b47f-0313ab934100d6e26" class="p pmarker tags" data-element="p" data-tektur-editor-id="d62835dc-4439-4d06-aea6-3b5009d03200" contenteditable="true">in einer XSpec Datei *. werden <span data-attribute-id="31a39752-2463-4c05-bbc6-043c7fa89e67d6e28" class="b tags" data-element="b" data-tektur-editor-id="83fb2cff-0dd4-407a-ad01-a6955da88df4">Assert- und Not-Assert-Methoden</span> [[xe1:Assert- und Not-Assert]]deklariert:</div><div class="pre"><div data-attribute-id="d8af0dec-90c1-46d7-bc10-89d3bd82ca50d6e31" data-attribute-xml_space="preserve" class="pre-content pmarker tags" data-element="pre" data-tektur-editor-id="a3e66412-3188-46c0-b354-b62ab84b8b7c" contenteditable="true">&#x3C;x:description xslt-version="2.0" xmlns:x="http://www.jenitennison.com/xslt/xspec" 
               schematron="test.sch"&#x3E;
  &#x3C;x:scenario label="ALL"&#x3E;
    &#x3C;x:context href="test.xml"/&#x3E;
    &#x3C;x:expect-not-assert id="person-nachname-rule" location="//person[1]/<span data-attribute-id="f1da55c6-96eb-44b5-ad06-0677145589f9d6e33" class="b tags" data-element="b" data-tektur-editor-id="643c8dd3-999d-4439-b23f-d846c061f49a">nachname</span>"/&#x3E;
    &#x3C;x:expect-assert id="person-nachname-rule" location="//person[2]/<span data-attribute-id="0cf62582-9a6c-4163-b6b1-5c28aa9fe998d6e36" class="b tags" data-element="b" data-tektur-editor-id="39f82b5d-804c-4394-8e2e-e1db8f11cf6f">nachname</span>"/&#x3E;
  &#x3C;/x:scenario&#x3E;
&#x3C;/x:description&#x3E;</div></div><div xmlns:xr="http://www.tekturcms.de/2012/xr/common" xmlns:xlink="http://www.w3.org/1999/xlink" data-attribute-id="9aac4097-bb50-44d5-8827-bd1775ce18fcd6e39" class="p pmarker tags" data-element="p" data-tektur-editor-id="ceeae37e-1816-4c67-8e1c-2a0e90482052" contenteditable="true">Grds. bdeutet ein Assert, dass das Mapping zwischen tatsächlichem Wert und Erwartungswert des
Testfalls[[xe1:Testfall]] positiv erfüllt ist. Beim Not-Assert ist das Gegenteil der Fall. Im obigen Beispiel
reichen zwei Regeln, um den Testfall vollständig abzudecken.</div><div xmlns:xr="http://www.tekturcms.de/2012/xr/common" xmlns:xlink="http://www.w3.org/1999/xlink" data-attribute-id="350b086a-a78e-47cc-9a3e-4f8c596fadf4d6e41" class="p pmarker tags" data-element="p" data-tektur-editor-id="0ca3a523-5353-4123-bbdb-a53d6b43e1e1" contenteditable="true">Wenn man Schematron[[xe1:Tools;xe2:Schematron]] Regeln mit Hilfe von XSpec testen will, dann muss man ein bisschen um 
die Ecke denken. Denn auch diese Regeln werden mittels Assert und Not-Assert modelliert.</div><div class="pre"><div data-attribute-id="d0f6307d-fa62-4212-b1f1-f1ad61431e84d6e43" data-attribute-xml_space="preserve" class="pre-content pmarker tags" data-element="pre" data-tektur-editor-id="e76a97e4-1c6f-4489-aebc-963768654922" contenteditable="true">&#x3C;sch:schema xmlns:sch="http://purl.oclc.org/dsdl/schematron" 
            xmlns:xsl="http://www.w3.org/1999/XSL/Transform" queryBinding="xslt2"&#x3E;
  &#x3C;sch:pattern id="main"&#x3E;
    &#x3C;sch:rule context="<span data-attribute-id="2ab3f43e-5f41-475a-82bf-df2c227b6756d6e45" class="b tags" data-element="b" data-tektur-editor-id="cba9f0f3-9cbf-4dab-bf78-026d7529cf5a">nachname</span>"&#x3E;
      &#x3C;sch:assert id="person-nachname-rule" role="error" test="normalize-space(.)"&#x3E;
        Der Nachname der Person mit ID: &#x3C;sch:value-of select="@id"/&#x3E; fehlt! 
      &#x3C;/sch:assert&#x3E;
    &#x3C;/sch:rule&#x3E;
  &#x3C;/sch:pattern&#x3E;
&#x3C;/sch:schema&#x3E;</div></div><div xmlns:xr="http://www.tekturcms.de/2012/xr/common" xmlns:xlink="http://www.w3.org/1999/xlink" data-attribute-id="5da4afab-3eda-4027-956a-1e72b6dd19b3d6e48" class="p pmarker tags" data-element="p" data-tektur-editor-id="31f9321f-8711-436f-8046-3b36f5d0bd52" contenteditable="true">In der Schematron-Regel wird zugesichert (Assert), dass jede Person einen Nachnamen hat.</div><div xmlns:xr="http://www.tekturcms.de/2012/xr/common" xmlns:xlink="http://www.w3.org/1999/xlink" data-attribute-id="6d2dba49-cecd-4315-8956-4beb19e4af08d6e50" class="p pmarker tags" data-element="p" data-tektur-editor-id="1effd689-cf98-4b27-a991-6b7404ff1246" contenteditable="true">Hat sie keinen Nachnamen so wird der Bericht zum Fehlerfall in die Schematron Ergebnisdatei
geschrieben. Diese Datei wertet nun Xspec aus.</div><div data-element="note" class="show_menu tags" data-tektur-editor-id="e0a5836e-4be7-442b-b531-9158ae59ea37"><div class="gui-optional-elements-button" contenteditable="false"><div class="menu-icon" style="display:none">+</div></div><div class="note"><div class="signal-word">NOTE</div><div class="hcontent"><div xmlns:xr="http://www.tekturcms.de/2012/xr/common" xmlns:xlink="http://www.w3.org/1999/xlink" data-attribute-id="611d787d-7b54-46dd-9548-158dd6db0bfcd6e53" class="p pmarker tags" data-element="p" data-tektur-editor-id="705179a9-f57e-49c2-8ba4-e28204d70286" contenteditable="true">Erscheint ein Fehler (= das Feld <span data-attribute-id="171bb098-8941-486f-b6e0-c577438c996dd6e55" class="b tags" data-element="b" data-tektur-editor-id="ced86a0a-ab34-49c0-bbc0-032bde1c3575">nachname</span> ist leer), so greift bei Xspec die Assert-Regel! Das ist die umgekehrte Logik zu den Schematron Regeln.</div></div></div></div><div xmlns:xr="http://www.tekturcms.de/2012/xr/common" xmlns:xlink="http://www.w3.org/1999/xlink" data-attribute-id="1ed9b5fd-88c2-4a6b-998b-6eac55854ec7d6e58" class="p pmarker tags" data-element="p" data-tektur-editor-id="72434ee7-e45a-44fa-8eff-fb4cfaf16815" contenteditable="true">Als Eselsbrücke kann man
ein Assert in der Xspec Datei gleichsetzen mit <span data-attribute-id="30100a12-de8b-4e03-a6ff-86361fb1e578d6e60" class="b tags" data-element="b" data-tektur-editor-id="86f8aa61-3683-4a6f-a0bc-c688cdc2ca6d">Appear</span> und ein Not-Assert mit
<span data-attribute-id="be31f20f-1e9b-4c0d-b42d-f12afa043917d6e63" class="b tags" data-element="b" data-tektur-editor-id="f00f0b0d-b835-4d12-8c56-716f30f139eb">Not-Appear</span>. [[xe1:Tipps und Tricks;xe2:Appear- und Not-Appear]]</div><div xmlns:xr="http://www.tekturcms.de/2012/xr/common" xmlns:xlink="http://www.w3.org/1999/xlink" data-attribute-id="5f9a44b2-0d88-4bf3-81f2-d93a28301049d6e67" class="p pmarker tags" data-element="p" data-tektur-editor-id="4183a251-18bd-472f-ac9b-ae502a84ae94" contenteditable="true">Ein Assert sichert also zu, dass sich ein Fehlerbericht in der
Schematron Ergebnisdatei zum Testfall befindet. Ein Not-Assert sichert zu, dass
sich kein Fehlerbericht befindet. </div><div xmlns:xr="http://www.tekturcms.de/2012/xr/common" xmlns:xlink="http://www.w3.org/1999/xlink" data-attribute-id="23ee0dc1-c910-43f7-a86b-442562947535d6e69" class="p pmarker tags" data-element="p" data-tektur-editor-id="b77e4f0b-f366-43ce-8d29-a24e18f2ea61" contenteditable="true"> Wie man sich leicht vorstellen kann, sind Assert-Regeln in diesem Fall leicht zu finden,
dazu muss man nur die Schematron Testregeln ins Leere zeigen lassen. Alles ist grün
und alles ist gut - dem Augenschein nach.</div></div></div></div>