<?xml version="1.0" encoding="UTF-8"?><elements><element id="8c5a4500-d080-4910-b4cd-529caeb12ae3" type="para">XQuery als Programmiersprache</element><element id="1e9a3c95-15bd-4eb0-89b8-59c8784a5425" type="para">Erste Schritte in XQuery gehen sehr schön mit der Query Konsole auf dem Marklogic Server (Port 8000). Hat man parallel auch noch oXygen Editor offen, kann man die Testergebnisse aus der Konsole direkt in ein XQuery Server Skript packen.</element><element id="fa1956ff-e468-4fb8-99dc-1a7a8f773707d6e7" type="para">Schleifen</element><element id="5fdff6dd-6c8a-467c-880d-33c88f7de0ded6e9" type="para">Die ersten 10 Dokumente auf dem Server bekommt man z.B. mit: </element><element id="95aadab7-0350-4643-9d88-b07f27dc6b7ed7e11" type="code">(doc())[position() lt 11]</element><element id="b3785b18-f654-4483-85a6-bdbb21caa0e1d6e13" type="para">Die Zahlen von 1 bis 100 mit:</element><element id="97b49dad-2f5b-43a8-a0fc-c5e9c53073d2d7e15" type="code">(for $i in (1 to 100) return $i)</element><element id="7558c943-b4af-4b14-acf0-fc84efcebb90d6e17" type="para">Wenn man diese beide Anweisungen untereinander in die Konsole schreibt bekommt man einen Fehler. Trennt man sie mit einem Komma - ein Tupel wird erzeugt - dann klappt es.</element><element id="0bbb962d-b38e-431a-855a-294425a5a016d6e20" type="para">Dokumente in der DB anlegen</element><element id="68e15e0c-efc5-472f-87fe-4d2dd4352485d6e22" type="para">Der Befehl zum Anlegen eines Dokuments in der Marklogic DB sieht folgendermassen aus (Doku) : </element><element id="5fa8ffd9-a7b4-4429-8f38-bc6696c50064d7e24" type="code">xdmp:document-insert( \"\/alex-test\/example-alex.xml\", &lt;root&gt;Hier steht der Content&lt;\/root&gt;, &lt;options xmlns=\"xdmp:document-insert\"&gt; &lt;metadata&gt;{ map:map() =&gt; map:with(\"valid-start\", \"2014-06-03T14:13:05.472585-07:00\") =&gt; map:with(\"valid-end\", \"9999-12-31T11:59:59Z\") }&lt;\/metadata&gt; &lt;\/options&gt;)</element><element id="0db3e46f-54fa-4858-b85d-ad36ded2bf2ad6e26" type="para">Packt man diese Instruktion in die for-Schleife oben, dann sieht das Konstrukt so aus:</element><element id="92bdb555-86b1-4e6b-8c21-18dcf9597397d7e28" type="code">(for $i in (1 to 10) return xdmp:document-insert( concat(\"\/alex-test\/example-alex-\",$i,\".xml\"), &lt;root&gt;Hier steht der Content {$i}&lt;\/root&gt;, &lt;options xmlns=\"xdmp:document-insert\"&gt; &lt;metadata&gt;{ map:map() =&gt; map:with(\"valid-start\", \"2014-06-03T14:13:05.472585-07:00\") =&gt; map:with(\"valid-end\", \"9999-12-31T11:59:59Z\") }&lt;\/metadata&gt; &lt;\/options&gt;) )</element><element id="ccd162ef-82c4-45f2-8a4d-a72e51647514d6e30" type="para">Dokumente kann man einer Collection zuweisen, um sie leichter finden und auswerten zu können. Das geht mit dem folgenden Befehl (Doku) und diesem Schnippsel:</element><element id="f016788d-e3b7-4971-b3d6-976b956940e7d7e32" type="code">let $root := &lt;mein-test&gt; &lt;id&gt;{$id}&lt;\/id&gt; &lt;content&gt;Hallo Welt!&lt;\/content&gt; &lt;\/mein-test&gt;, $options := &lt;options xmlns=\"xdmp:document-insert\"&gt; &lt;permissions&gt;{xdmp:default-permissions()}&lt;\/permissions&gt; &lt;collections&gt; &lt;collection&gt;\/alex-test&lt;\/collection&gt; &lt;\/collections&gt; &lt;\/options&gt;, $fname := concat('\/',$id,'_','.xml'), $td := xdmp:document-insert($fname,$root,$options) return [...]</element><element id="089d273b-a358-45a2-857e-181948135159d6e34" type="para">Die Dokumente, die mit der Collection alex-test getaggt wurden, kann man sich mit der folgenden Schleife ausgeben lassen:</element><element id="36ae9fb6-f8b7-4da6-99c4-fc78d3255e9dd7e36" type="code">for $x in collection(\"\/alex-test\") return fn:document-uri($x)</element></elements>