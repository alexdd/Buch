[{"id":"f19c130f-edfe-408f-a9e2-31b53d92bb4c","text":"Aktuelle und vergangene Anwendungen","title":"Aktuelle und vergangene Anwendungen "},{"id":"0d86999f-6918-45f8-aa05-ee775429e1db","text":"Wie auch bei anderen Programmiersprachen, hat es einige Zeit gedauert bis sich für XSLT der optimale Anwendungsbereich herauskristallisiert hat. Auch bei XSLT war ursprünglich das Internet und insbesondere Webseitenprogrammierung die treibende Kraft, weil meinte, mittels XSLT besonders gut Inhalt und Semantik trennen zu können.","title":"Aktuelle und vergangene Anwendungen "},{"id":"1cc2b53a-8cb6-4144-83d9-02b7d4475ce5d7e6","text":"Relativ schnell hat sich aber CSS in Verbindung mit JavaScript als Standardlösung für diese Zecke bewährt. XSLT ist inzwischen Platzhirsch im Bereich Technische Dokumentation und hier auch wohl unschlagbar.","title":"Aktuelle und vergangene Anwendungen "},{"id":"ab76273e-04a8-430a-9f91-9a1b68d9c981d6e7","text":"XML Webseiten","title":"Aktuelle und vergangene Anwendungen "},{"id":"d23736ab-93da-4908-83d8-38ffd747db2dd6e9","text":"Einen XSLT Prozessor hat jeder Browser eingebaut. Es gab mal eine Zeit, in der es sehr populär war, Webseiten vom Server als XML auszuliefern. XML erlaubt die semantische Auszeichung des Inhalts, und die strikte Trennung des Inhalts von Layout und Design. Wesentlich besser als dies mit HTML und CSS jemals möglich wäre. U.a. wegen des exzessiven Einsatzes von JavaScript (auch inline), hat sich diese Idee nie vollständig durchgesetzt. Schliesslich wurde XHTML spezifiziert und jetzt gibt es HTML5.","title":"Aktuelle und vergangene Anwendungen "},{"id":"c5dabda9-b019-4598-8fed-e6a685efd53cd6e17","text":"Betrachten wir das folgende XML Beispiel:","title":"Aktuelle und vergangene Anwendungen "},{"id":"1450640b-064e-42c2-9881-547df58b7020d6e21","text":"Ohne XSLT Stylesheet Zuweisung wird der Browser eine Datei mit diesem Inhalt als eingerücktes XML anzeigen - oder die Tags einfach ignorieren und den Textinhalt in einer Zeile darstellen. Fügt man eine Processing Instruction am Anfang ein, wird ein XSLT Stylesheet vom Browser herangezogen und vor der Darstellung im Browser wird die so deklarierte XML Transformation ausgeführt:","title":"Aktuelle und vergangene Anwendungen "},{"id":"134c0541-26a7-4213-9b7d-ed83c8f08cbcd6e25","text":"Das XML kann nun im Browser geöffnet werden und alles wird schön formatiert angezeigt...","title":"Aktuelle und vergangene Anwendungen "},{"id":"25706f42-0507-45a5-a2cc-66f12f9e87bdd6e30","text":"Die Processing Instruction hat keinen Einfluss auf den XML Inhalt und wird in einer anderen Eingabeverarbeitung nicht herangezogen.","title":"Aktuelle und vergangene Anwendungen "},{"id":"d1a0e576-5434-4f78-a143-0aba397514ddd6e33","text":"Serverseitige Konvertierung","title":"Aktuelle und vergangene Anwendungen "},{"id":"a476b87f-7491-444d-8668-72f5e5719ebed6e35","text":"Auch eine serverseitige Konvertierung ist gebräuchlich. Ein Beispiel aus vergangenen Tagen - WAP-Seiten für unterschiedliche Handy-Modelle.","title":"Aktuelle und vergangene Anwendungen "},{"id":"b764a9c0-9b8f-411a-ab3a-6b9241047afed6e37","text":"Früher hatten die Handys sehr unterschiedliche Displaygrößen. Handybrowser konnten nicht ausreichend JavaScript und die Skalierung der WAP-Seite für das jeweilige Handy passierte nicht im Handy, sondern vor der Auslieferung auf der Serverseite. Dazu wurde eine XML Quelle mittels verschiedener XSLT Stylesheets in unterschiedliche WML WAP Repräsentationen transformiert.","title":"Aktuelle und vergangene Anwendungen "},{"id":"47042bcb-c720-41ec-819b-86527013fa52d6e39","text":"So würde das Zwei-Kapitel Beispiel von oben im WML Format aussehen (recht einfach gehalten):","title":"Aktuelle und vergangene Anwendungen "},{"id":"5d603262-8282-4d8f-bb2f-145b7ff53e92d6e43","text":"Eine XSLT Transformation, die die XML Daten von oben in diese WML Darstellung überführt, könnte z.B. so implementiert werden:","title":"Aktuelle und vergangene Anwendungen "},{"id":"fa0123f8-d2ab-48fe-a8a4-69c5ea6e5b29d6e48","text":"Multiple Ausgabeformate","title":"Aktuelle und vergangene Anwendungen "},{"id":"479bd9ce-f36a-4b96-a291-61f95e4e767dd6e50","text":"Aus einer XML Quelle können auch leicht weitere Format erzeugt werden, bspw. . EPUB ist das Standardformat für eBooks. Neben Tags zur Formatierung für den Content, gibt es bspw. auch Anweisungen zum Erzeugen des Inhaltsverzeichnisses oder anderer Navigationsstrukturen.","title":"Aktuelle und vergangene Anwendungen "},{"id":"e8969256-cea5-4fd0-b7bf-5f9eeb42b148d6e52","text":"Weitere gängige Formate sind neben dem oben veralteten WML Format, elektronische Ausgabe-Formate wie: CHM, EclipseHelp, JavaHelp, ..., Print-Ausgabe Formate, wie PDF oder Adobe Framemaker, oder XML Standard Austauschformate, wie DITA, S1000D, PI-MOD, JATS oder TEI.","title":"Aktuelle und vergangene Anwendungen "},{"id":"4135a624-a45f-433c-8d0b-18416fe3765fd6e55","text":"Menschenlesbare Ausgabe","title":"Aktuelle und vergangene Anwendungen "},{"id":"dc869a54-1cb6-4282-b816-825027432083d6e57","text":"Kryptische XML Log-, Daten- oder Konfigurationsfiles können leicht mit XSLT menschenlesbar formatiert werden. Ein Arbeitskollege im neuen Job kam kürzlich auf mich zu, ob ich um eine Möglichkeit wüsste, wie man sein kryptisches Datenfile für einen Übersetzungsdienst formatieren könnte:","title":"Aktuelle und vergangene Anwendungen "},{"id":"aaaf6a3a-55b3-4599-8bbd-59db3819473fd6e61","text":"Mit einem eingehängten XSLT Stylesheet wird so ein Datenfile als Tabelle formatiert:","title":"Aktuelle und vergangene Anwendungen "},{"id":"8306957f-386e-4c63-9c69-ee876511fecbd6e65","text":"Hängt man an dieses Beispiel noch ein bisschen JavaScript Logik und macht die Felder für die Übersetzungen mittels des HTML5 Attributs editierbar, dann bräuchte man nur noch eine Rücktransformation HTML nach XML und hätte schon einen kleinen XML Editor gebaut. So funktioniert auch der Editor in .","title":"Aktuelle und vergangene Anwendungen "},{"id":"5ab04d47-2964-42e4-8002-ba2b7828111bd6e68","text":"Diagramme darstellen","title":"Aktuelle und vergangene Anwendungen "},{"id":"6a649e53-dde4-4e49-8e01-1fb5ad83cf2ed6e70","text":"Nachdem eine SVG Grafik im XML Format vorliegt kann diese auch direkt aus XML Daten mittels XSLT erzeugt werden. Über das HTML5 Element kann so eine erzeugte Grafik inline in das ebenfalls durch das XSLT generierte HTML Dokument eingebunden werden.","title":"Aktuelle und vergangene Anwendungen "},{"id":"182ba4df-adcd-4102-af88-18c7570f7b71d6e72","text":"Betrachten wir unser Beispiel von oben, erweitert um drei neue Elemente:","title":"Aktuelle und vergangene Anwendungen "},{"id":"f5656cd5-03c5-43a0-be15-a7187bbdab37d6e76","text":"Wenn wir das XSLT Stylesheet noch um eine Regel für das neue Element ergänzen, so wie hier:","title":"Aktuelle und vergangene Anwendungen "},{"id":"1015bdf3-e31c-4085-b1cb-00c7cc2c5bd4d6e80","text":"Dann erhalten wir drei schön formatierte gelbe SVG Blöcke ...","title":"Aktuelle und vergangene Anwendungen "},{"id":"f1e12ddb-1bcb-49c0-b938-0a77393018d1d6e82","text":"Weiterführende Links:","title":"Aktuelle und vergangene Anwendungen "},{"id":"d206a44d-c978-4902-9d62-0d34675e805dd6e87","text":"Client-side image generation with SVG and XSLT","title":"Aktuelle und vergangene Anwendungen "},{"id":"5689021e-dff9-4b37-9f33-35a0bb84a3c6d6e90","text":"Knotentyp Visualisierung im Apache Jack Rabbit Projekt","title":"Aktuelle und vergangene Anwendungen "}]