[{"id":"6e53fba3-c83c-4a92-8cea-170e5781324c","text":"Identifikation mit","title":"Identifikation mit [[code:generate-id()]] "},{"id":"3cd96c4e-4783-468f-a32c-5a009e3cd115","text":"Die Funktion gibt es in XSLT schon immer. Mit ihr kann eine Prüfsumme eines Knotens im Baum generiert werden.","title":"Identifikation mit [[code:generate-id()]] "},{"id":"ec777147-e5f9-4922-90d7-da6edb3ba4e4d6e6","text":"Das funktioniert natürlich nur, wenn man bei der Auswertung dieses Wertes nicht den Kontext wechselt. D.h. z.B. dass ein Knoten in einem Baum,\nder in einer Variablen gespeichert ist, eine andere Prüfsumme bekommt, als derselbe Knoten im Kontext-Baum.","title":"Identifikation mit [[code:generate-id()]] "},{"id":"fc5861f4-cba9-4568-8ebe-a70d04f46a66d6e9","text":"Beispiel Stückliste","title":"Identifikation mit [[code:generate-id()]] "},{"id":"f1a60882-448a-4f9f-a10b-0b54ef3aa35dd6e10","text":"Ein Anwendungszenario wäre bspw. die Generierung einer Target-ID für ein Bauteil in einer Stückliste. Das Bauteil ist nur einmal im \nSystem erfasst, hat also eine eindeutige ID, soll aber an mehreren Stellen in die Ausgabe (Eine Dokumentation für eine Maschine)\ngeneriert werden.","title":"Identifikation mit [[code:generate-id()]] "},{"id":"8168234a-94fe-432e-900c-567faf2a8552d6e12","text":"Die Id an einem Element würde somit mehrfach in die XML Eingabe für einen XSL-FO Prozessor erscheinen und ist \nfür Referenzen unbrauchbar geworden. Deshalb ist es ratsam beim Rendern der Bauteile eine neue Id zu vergeben, das kann z.B. \nmit den folgenden Templates (vereinfacht) passieren:","title":"Identifikation mit [[code:generate-id()]] "},{"id":"90386d0e-7162-471c-8c09-8bb00da36da5d6e17","text":"Beispiel Mantel Dokument","title":"Identifikation mit [[code:generate-id()]] "},{"id":"b77784f8-4fa6-4519-b20d-347ba62d7e8bd6e18","text":"Im Bereich EDI Datenaustausch werden große XML Dateien versendet, die man auf einzelne Transmissions \naufsplitten will, um sie in einer XML Datenbank abspeichern zu können. Die Struktur einer Datenübertragung\nkönnte folgendermassen aussehen:","title":"Identifikation mit [[code:generate-id()]] "},{"id":"30f17d4c-717b-4778-ad02-1d6a5f41c443d6e22","text":"Jedes einzelne Element soll nun einen Mantel erhalten und separat in einer Datei abgelegt werden.\nDer \"Umschlag\" soll dabei alle Elemente des Rahmens der Transmission erhalten. Also alles auf der\nDescendant-Achse bis zum Element , ausserdem noch die Elemente und ,\nsowie das Element mit Kind . Ohne groß auf die Performanz zu achten, könnte das recht einfach so realisiert werden:","title":"Identifikation mit [[code:generate-id()]] "},{"id":"a7ab8655-d9eb-4343-bebf-c4d8850cb2c6d6e26","text":"Im rekursiven Abstieg wird im Modus \"umschlag\" jedes Element selektiert und\nin einen Umschlag verpackt. Der eigentlich Inhalt des Umschlags wird generiert,\nindem der gesamte XML Baum über die Standard-Kopierregel in das Element gesetzt wird. Dabei wird aber nur derjenige Abschnitt evaluiert, der - zu der als Parameter übergebenen - generierten Id passt.","title":"Identifikation mit [[code:generate-id()]] "}]