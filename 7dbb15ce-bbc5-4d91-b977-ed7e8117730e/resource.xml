<?xml version="1.0" encoding="UTF-8"?><topic id="b1719307-52da-4e1d-9aee-a3a6bb139d92"><title id="5d677796-4ebf-49b1-85ba-45315312a0e4">GIT Einmaleins</title><body id="0a19606e-0b70-4532-9eaa-bf50a84927d0"><p id="c2e52685-e1e6-417d-8e94-2d5367436ccb">Im Fachbereich Technische Dokumentation wird neue Technologie ein bisschen langsamer adaptiert, als in anderen Disziplinen der IT - schliesslich muss ja erst alles dokumentiert werden ...</p><p id="24285d0d-c75e-44d5-82a9-c7c4153549e7d6e6">Bei Versionsverwaltungssystemen ist das nicht anders. Doch inzwischen hat auch GIT[[xe1:Tools;xe2:GIT]] in manchen Entwicklerbüros Einzug gehalten und verdrängt Subversion.</p><p id="9b7be9ab-cc3d-46ae-adeb-c0b506eda947d6e8">Ein Grund an dieser Stelle einmal zumindest die wichtigsten Befehle aufzulisten - Note to self:</p><pre id="12096248-ac31-468f-870e-5939f9c0c997d7e10" xml:space="preserve">GIT COMMANDS

CLONE
=====
git clone https://github.com/libgit2/libgit2
SIMPLE
======
git init
git add *
git commit -m "Form validation added”
[changes]
git add [changed files] or git commit -a
git diff —cached
git branch experimental
git checkout experimental
git commit -a -m "only in the experimental branch”
git checkout master
git merge experimental
git branch -d experimental

COLLABORATION
=============
push new branch git push -u origin newLocalBranch
bob$ git clone /home/alice/project myrepo
(edit files)
bob$ git commit -a
alice$ cd /home/alice/project
alice$ git pull /home/bob/myrepo master  (fetch &amp; merge)
(fetch and not merge)
alice$ git fetch /home/bob/myrepo master
alice$ git log -p HEAD..FETCH_HEAD
(visualization only)
gitk HEAD..FETCH_HEAD
gitk HEAD…FETCH_HEAD
—
git log
git show ea14 (firs chars is enough)
git grep "headline_font_size” v2.5

PULL REQUESTS
=============
(checkout branch)
git pull origin simple-examples
(changes)
git push origin simple-examples
Create a pull request using the form on the Github page and assign it to a Reviewer

MERGE CONFLICTS
===============
git pull origin master
=&gt; merga conflicts

TROUBLE SHOOTING
=================
git reset --hard origin/master
git tree
git status
git checkout 118886ee3f06738b53f089433078d35f4d70a8f9 vendor/error-report.xsl
git log --diff-filter=D --summary</pre></body></topic>