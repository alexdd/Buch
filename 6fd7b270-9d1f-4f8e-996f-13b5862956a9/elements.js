[{"id":"a693fc99-5e16-4788-95a0-958870aa845a","type":"para","text":"Validierung mit Schematron","title":" Validierung mit Schematron "},{"id":"4e6cde2f-795e-42a2-97a3-67b0c72db22a","type":"para","text":"Um die Korrektheit einer XML Instanz zu prüfen, gib es verschiedene Schemata, wie XSD , RNG oder DTD , welche der Parser beim Aufbau des DOM Baums heranzieht. Eine Validierung mit Apache Xerces könnte beispielsweise als Java Code folgendermaßen angestossen werden:","title":" Validierung mit Schematron "},{"id":"1c11f6e7-bff1-4c65-933a-6c6963fd96add7e15","type":"code","text":"URL schemaFile = new URL(\"http:\/\/host:port\/filename.xsd\"); Source xmlFile = new StreamSource(new File(\"web.xml\")); SchemaFactory schemaFactory = SchemaFactory .newInstance(XMLConstants.W3C_XML_SCHEMA_NS_URI); try { Schema schema = schemaFactory.newSchema(schemaFile); Validator validator = schema.newValidator(); validator.validate(xmlFile); System.out.println(xmlFile.getSystemId() + \" is valid\"); } catch (SAXException e) { System.out.println(xmlFile.getSystemId() + \" is NOT valid reason:\" + e); } catch (IOException e) {","title":" Validierung mit Schematron "},{"id":"e0f8f3a8-ac48-4040-aa61-6d98bf685133d6e8","type":"para","text":"Schema Dateien können aber auch in XML Editoren eingebunden werden, um schon während der Eingabe der XML Instanz die Korrektheit zu überprüfen.","title":" Validierung mit Schematron "},{"id":"3920a1e6-ddfe-499f-997b-33b7b330ae55d6e10","type":"para","text":"Das geht einerseits über die Angabe des Doctypes in der XML Instanz, anderseits bieten auch alle Editoren die Möglichkeit ein bestimmtes Schema explizit auszuwählen, um gegen dieses auf Anforderung zu validieren.","title":" Validierung mit Schematron "},{"id":"0c8bf04d-6ef7-4b2b-9e36-3c115fdf5657d6e10","type":"para","text":"Gilt es komplexere Businessregeln zu überprüfen, die über Syntax-, Konsistenz- und einfache Korrektheitschecks hinausgehen, empfiehlt sich eine Validierung mit Schematron Regeln.","title":" Validierung mit Schematron "},{"id":"c802dd14-5953-4c24-8637-f7552d107e57d6e13","type":"para","text":"Schematron ist XSLT","title":" Validierung mit Schematron "},{"id":"c7d6f54a-c183-4238-8fcd-65258833ebd9d6e15","type":"para","text":"Bei einer Schematron Validierung wird eine XML Instanz mit Hilfe eines automatisch generierten XSLT Stylesheets überprüft. Dieses kontextabhängige Stylesheet wird aus einer in der Schematron Syntax vom Autor verfassten Regelbasis, die wiederum in XML vorliegt, über ein zweites XSLT Stylesheet generiert - Dieses zweite XSLT Stylesheet ist sozusagen das eigentliche Schematron Programm.","title":" Validierung mit Schematron "},{"id":"ca8d184a-924b-4ea6-bdab-3340c1bde072d6e19","type":"para","text":"Das folgende Diagramm veranschaulicht die Vorgehensweise anhand eines Filter-Szenarios , bei dem ein XML Dokument mit einigen ungültigen Passagen in eine gefilterte Darstellung überführt wird.","title":" Validierung mit Schematron "},{"id":"14d10ed8-da18-4558-85da-bba3ee0d3519d7e32","type":"para","text":"Schematron Validierung mit Filter","title":" Validierung mit Schematron "},{"id":"4e1ec9a6-9a1a-470b-9e86-2708788be97bd6e19","type":"para","text":"Zu finden ist das Schematron Repo auf Github . Dieses Repo ist etwas unübersichtlich. Der relevante Teil des Sourcecodes befindet sich unter:","title":" Validierung mit Schematron "},{"id":"0cc5ca05-4506-44eb-981b-f74a156e6da0d6e20","type":"para","text":"CLI Verwendung","title":" Validierung mit Schematron "},{"id":"3f68c067-cd95-4b41-b51b-c594057af29fd6e22","type":"para","text":"Um die Schematron XSLT Skripte in eine eigene XSLT Anwendung per Kommandozeile einzubinden, könnte man folgendermassen vorgehen:","title":" Validierung mit Schematron "},{"id":"59142162-ceef-41df-a800-9a82f41eaff6d6e30","type":"para","text":"Im eigenen GIT Projekt das Schematron Projekt als Submodule referenzieren.","title":" Validierung mit Schematron "},{"id":"8a62a1b3-7fee-435a-bf97-c1948afb372ed6e33","type":"para","text":"Eine Regelbasis anlegen, beispielsweise .","title":" Validierung mit Schematron "},{"id":"eab4b247-bdc0-4465-bc93-a032e7705a07d6e39","type":"para","text":"Zwei Batch-Skripte anlegen, beispielsweise und .","title":" Validierung mit Schematron "},{"id":"998bb486-7c42-4af2-8e5b-0e85e56dc38ad6e50","type":"para","text":"Mittels des Skripts wird aus der Schematron Regelbasis das Schematron XSLT Stylesheet generiert. Der Inhalt dieser Batchdatei könnte zum Beispiel so aussehen:","title":" Validierung mit Schematron "},{"id":"26247364-5686-4b3a-8e1e-1cab4f253b82d7e56","type":"code","text":"saxon $script_dir\/$project_name_validation.sch $script_dir\/schematron\/iso_dsdl_include.xsl | \\ saxon -s:- $script_dir\/schematron\/iso_abstract_expand.xsl | \\ saxon -s:- $script_dir\/schematron\/iso_svrl_for_xslt2.xsl \\ generate-fired-rule =false > $script_dir\/$project_name_validation.xsl","title":" Validierung mit Schematron "},{"id":"7be99f5c-fe71-459c-8ddf-9f08385e9169d6e54","type":"para","text":"Der Prozess zum Erzeugen des projektspezifischen Validerungs-XSLT-Skripts ist dreistufig und wird über die folgenden XSLT Schritte abgearbeitet.","title":" Validierung mit Schematron "},{"id":"eb1a9bae-260a-4106-b5c9-b6851fdd2ba1d6e58","type":"para","text":"","title":" Validierung mit Schematron "},{"id":"a82297e3-5906-4320-99eb-713788e3b883d6e61","type":"para","text":"","title":" Validierung mit Schematron "},{"id":"cab1d34a-07d6-4707-8cfd-1a22273d0703d6e64","type":"para","text":"","title":" Validierung mit Schematron "},{"id":"315b3655-c795-42e1-908a-769f2ca0b68cd6e66","type":"para","text":"Herauszufinden, was in diesen Skripten passiert, sei dem geneigten Leser selbst überlassen. Uns interessiert an dieser Stelle nur das Resultat, nämlich das XSLT Stylesheet .","title":" Validierung mit Schematron "},{"id":"a226a2f6-4408-401b-b164-9ee358f8bd09d6e76","type":"para","text":"Dieses Skript wird in der Batchdatei aufgerufen:","title":" Validierung mit Schematron "},{"id":"958107f0-f47f-4401-ad4a-9c69b2a1a5a3d7e77","type":"code","text":"saxon $xml_instance_to_check.xml $script_dir\/$project_name_validation.xsl \\ > $validation-result.xml","title":" Validierung mit Schematron "},{"id":"bd569a63-55f0-4524-bb53-0d3eeb1bdb59d6e83","type":"para","text":"Die Ausgabe dieses Prüfprozesses ist eine XML Datei mit den Fehlern in der Eingabe-XML-Instanz, die weiterverarbeitet werden kann, beispielsweise als Filterkriterium für einen nachfolgenden Prozessschritt. Ihr Inhalt dieser Datei sieht z.B. wie folgt aus:","title":" Validierung mit Schematron "},{"id":"bd7c1f8c-ad3d-47a9-b422-dac4c7180d84d7e82","type":"code","text":"<svrl:schematron-output xmlns:svrl=\"http:\/\/purl.oclc.org\/dsdl\/svrl\" [...] <svrl:active-pattern document=\"file:\/Users\/alex\/xml_instance_to_check.xml\" id=\"default\" name=\"default\"\/> <svrl:failed-assert test=\"count(key('unique-ids', current()))=1\"> <svrl:text>ID is not unique!<\/svrl:text> <svrl:diagnostic-reference diagnostic=\"default\"> <bk:id xmlns:bk=\"http:\/\/tekturcms\/namespaces\/book\">1234-5678-9<\/my:id> <\/svrl:diagnostic-reference> <\/svrl:failed-assert> [...]","title":" Validierung mit Schematron "},{"id":"62973ac6-dca8-47cf-b4aa-8e5b6c4242a6d6e88","type":"para","text":"Neben den Elementen, die angeben, was bei der überprüften XML-Instanz fehlgeschlagen ist, gibt es auch die Möglichkeit sich positive Ergebnisse anzeigen zu lassen - über das Element .","title":" Validierung mit Schematron "},{"id":"a939cc7b-99b0-401a-8bc5-5b0c0f41882cd6e100","type":"para","text":"Konkret sagt uns das obige XML Schnipsel, dass unsere mit dem Wert im geprüften XML Dokument nicht eindeutig ist. Die Schematron Regelbasis, die wir zur Überprüfung angegebenen haben, sieht so aus:","title":" Validierung mit Schematron "},{"id":"cf77a4b2-51fa-4a4d-b527-2c6c763d6274d7e88","type":"code","text":"<schema xmlns:sch=\"http:\/\/purl.oclc.org\/dsdl\/schematron\" [...] <xsl:key name=\"unique-ids\" match=\"bk:id\" use=\".\"\/> <sch:let name=\"date-regex\" value=\"'^((19|2[0-9])[0-9]{2})-(0[1-9]|1[012]) -(0[1-9]|[12][0-9]|3[01])$'\"\/> <sch:pattern id=\"default\"> <sch:rule context=\"book\"> <sch:assert id=\"check-book-id\" role=\"error\" test=\"count(key('unique-ids', bk:id))=1\" diagnostics=\"default\">ID is not unique!<\/sch:assert> <sch:assert id=\"check-book-published\" role=\"error\" test=\"matches(bk:published,$date-regex) <\/sch:rule> [...] <\/sch:pattern> <sch:diagnostics> <sch:diagnostic id=\"default\"> <xsl:element name=\"bk:id\"> <xsl:value-of select=\"bk:id\"\/> <\/xsl:element> <\/sch:diagnostic> <\/sch:diagnostics>","title":" Validierung mit Schematron "},{"id":"86e8f330-f639-42dd-98da-7eebba76fb51d6e108","type":"para","text":"Neben der \"successful\" und \"failed\" Regeln ist auch die Deklaration von Funktionen und Variablen im Body der Regelbasis erlaubt. Dies ermöglicht komplexe Bedingungen, bespw. durch das Nachschlagen in einer Lookup-Tabelle abzuprüfen.","title":" Validierung mit Schematron "}]